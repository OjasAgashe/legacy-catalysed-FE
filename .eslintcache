[{"F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\index.tsx":"1","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\reportWebVitals.ts":"2","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\App.tsx":"3","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\OrganizationRegistration\\OrganizationRegistration.tsx":"4","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\StudentRegistration\\StudentRegistration.tsx":"5","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\MentorRegistration\\MentorRegistration.tsx":"6","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\OrganizationDetail\\OrganizationDetail.tsx":"7","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\NotFound\\NotFound.tsx":"8","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\NavHome\\NavHome.tsx":"9","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\HomePageContainer\\HomepageContainer.tsx":"10","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\Footer\\Footer.tsx":"11","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\Header\\Header.tsx":"12","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\CreateProgram\\CreateProgram.tsx":"13","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\Login\\Login.tsx":"14","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\Welcome\\Welcome.tsx":"15","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\ProgramDetail\\ProgramDetail.tsx":"16","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\EditProgram\\EditProgram.tsx":"17"},{"size":500,"mtime":1616781997377,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":2458,"mtime":1617340374595,"results":"21","hashOfConfig":"19"},{"size":8218,"mtime":1618290311223,"results":"22","hashOfConfig":"19"},{"size":7733,"mtime":1618289684751,"results":"23","hashOfConfig":"19"},{"size":7601,"mtime":1618289635703,"results":"24","hashOfConfig":"19"},{"size":3865,"mtime":1618476572859,"results":"25","hashOfConfig":"19"},{"size":210,"mtime":1612343840907,"results":"26","hashOfConfig":"19"},{"size":6137,"mtime":1616006657209,"results":"27","hashOfConfig":"19"},{"size":7955,"mtime":1618496733859,"results":"28","hashOfConfig":"19"},{"size":577,"mtime":1618496752219,"results":"29","hashOfConfig":"19"},{"size":3470,"mtime":1617983671981,"results":"30","hashOfConfig":"19"},{"size":28875,"mtime":1618759412397,"results":"31","hashOfConfig":"19"},{"size":2802,"mtime":1616179167130,"results":"32","hashOfConfig":"19"},{"size":821,"mtime":1616004553115,"results":"33","hashOfConfig":"19"},{"size":9721,"mtime":1618765554245,"results":"34","hashOfConfig":"19"},{"size":19156,"mtime":1617607806132,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"od8rf3",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"38"},"F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\index.tsx",[],["83","84"],"F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\reportWebVitals.ts",[],"F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\App.tsx",["85","86","87","88"],"import React, { createContext, useState ,FC} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport OrganizationRegistration from './components/OrganizationRegistration/OrganizationRegistration';\nimport OrganizationDetail from './components/OrganizationDetail/OrganizationDetail';\nimport StudentRegistration from './components/StudentRegistration/StudentRegistration';\nimport MentorRegistration from './components/MentorRegistration/MentorRegistration';\nimport NotFound from './components/NotFound/NotFound';\n\nimport HomepageContainer from './components/HomePageContainer/HomepageContainer';\nimport CreateProgram from './components/CreateProgram/CreateProgram';\nimport Login from './components/Login/Login';\nimport Welcome from './components/Welcome/Welcome';\nimport ProgramDetail from './components/ProgramDetail/ProgramDetail';\nimport { Flip, ToastContainer } from 'react-toastify';\nimport EditProgram from './components/EditProgram/EditProgram';\nexport const UserContext=createContext<any>(null||Boolean||String) \nconst  App:FC=()=> {\nconst[id,setId]=useState()\nconst[givenDate,setGivenDate]=useState()\n \n  return (\n    <div className=\"App\">\n      \n<UserContext.Provider value={{id,setId,givenDate,setGivenDate}}>\n      <Router>\n        <Switch>\n        <Route exact path=\"/organizer\">\n          <OrganizationRegistration/>\n        </Route>\n        <Route exact path=\"/organizationDetail\">\n         <OrganizationDetail/>\n        </Route>\n        <Route exact path=\"/student\">\n         <StudentRegistration/>\n        </Route>\n        <Route path=\"/editProgram/:userId\">\n         <EditProgram/>\n        </Route>\n        <Route exact path=\"/mentor\">\n         <MentorRegistration/>\n        </Route>\n        <Route exact path=\"/welcome\">\n          <Welcome/>\n        </Route>\n        <Route exact path=\"/homePage\">\n          <HomepageContainer/>\n        </Route>\n        <Route exact path=\"/programDetail\">\n          <ProgramDetail/>\n        </Route>\n        <Route exact path=\"/createProgram\">\n          <CreateProgram  />\n        </Route>\n        <Route exact path=\"/login\">\n          <Login/>\n        </Route>\n        <Route exact path=\"/\">\n      <CreateProgram/>\n        </Route>\n        <Route exact path=\"*\">\n       <NotFound/>\n        </Route>\n        </Switch>\n      </Router>\n      </UserContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\OrganizationRegistration\\OrganizationRegistration.tsx",["89","90","91"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './OrganizationRegistration.css'\r\n\r\nconst OrganizationRegistration = () => {\r\n\r\nconst history= useHistory()\r\nconst [organizationRegistrationInfo,setOrganizationRegistrationInfo]=useState({\r\n        firstName:'',\r\n        lastName:'',\r\n        email:'',\r\n        password:'',\r\n        confirmPassword:''\r\n    })\r\n\r\nconst [errorsOrganizerRegistration,setErrorsOrganizerRegistration]=useState({\r\n    firstName:'',\r\n    lastName:'',\r\n    email:'',\r\n    password:'',\r\n    confirmPassword:''\r\n})\r\n\r\nconst validateOrganizationRegistration=(organizationRegistrationInfo:any)=>{\r\n\r\n        if(organizationRegistrationInfo.firstName.trim()){\r\n            errorsOrganizerRegistration.firstName=\"\"\r\n          }\r\n    \r\n        if(!organizationRegistrationInfo.firstName.trim()){\r\n          errorsOrganizerRegistration.firstName=\"\"\r\n        }\r\n        else if (!/^(?=.{1,50}$)[a-z]+(?:['_.\\s][a-z]+)*$/i.test(organizationRegistrationInfo.firstName.trim())) {\r\n              errorsOrganizerRegistration.firstName = 'Enter a valid name'\r\n        }\r\n\r\n        \r\n        if(organizationRegistrationInfo.lastName.trim()){\r\n            errorsOrganizerRegistration.lastName=\"\"\r\n          }\r\n    \r\n        if(!organizationRegistrationInfo.lastName.trim()){\r\n          errorsOrganizerRegistration.lastName=\"\"\r\n        }\r\n      else if (!/^[a-zA-Z]+$/.test(organizationRegistrationInfo.lastName.trim())) {\r\n        errorsOrganizerRegistration.lastName = 'Enter a valid name'\r\n      }\r\n\r\n      if (organizationRegistrationInfo.email) {\r\n        errorsOrganizerRegistration.email = ''\r\n      } \r\n      if (!organizationRegistrationInfo.email) {\r\n        errorsOrganizerRegistration.email = ''\r\n      } \r\n      else if (!/\\S+@\\S+\\.\\S+/.test(organizationRegistrationInfo.email)) {\r\n        errorsOrganizerRegistration.email = 'Enter valid email address'\r\n      }\r\n\r\n      if(organizationRegistrationInfo.password){\r\n          errorsOrganizerRegistration.password=\"\"\r\n      }if(!organizationRegistrationInfo.password){\r\n        errorsOrganizerRegistration.password=\"\"\r\n    }else if(organizationRegistrationInfo.password.length<8){\r\n       errorsOrganizerRegistration.password=\"Password needs to be 8 characters or more\"\r\n      }\r\n\r\n     if(organizationRegistrationInfo.confirmPassword){\r\n          errorsOrganizerRegistration.confirmPassword=\"\"\r\n      } if(!organizationRegistrationInfo.confirmPassword){\r\n          errorsOrganizerRegistration.confirmPassword=\"\"\r\n      }else if(organizationRegistrationInfo.confirmPassword && organizationRegistrationInfo.password.length==0){\r\n        errorsOrganizerRegistration.confirmPassword=\"First  fill up the password field\"\r\n    }else if(organizationRegistrationInfo.confirmPassword !==organizationRegistrationInfo.password){\r\n          errorsOrganizerRegistration.confirmPassword=\"Password did not match...Check again\"\r\n      }\r\n\r\n      console.log(errorsOrganizerRegistration);\r\n      \r\n     \r\n      \r\n}\r\n\r\n\r\nconst  handleOrganizationRegistrationChange =(e:any) =>{\r\n    const{name,value}=e.target\r\n    setOrganizationRegistrationInfo({\r\n...organizationRegistrationInfo,\r\n[name]:value\r\n    } )\r\n \r\n  \r\n   \r\n    console.log(organizationRegistrationInfo)\r\n} \r\nconst handleOrganizationRegistrationCapture =(e:any) =>{\r\n    const{name,value}=e.target\r\n    setOrganizationRegistrationInfo({\r\n...organizationRegistrationInfo,\r\n[name]:value\r\n    } )\r\n \r\nvalidateOrganizationRegistration(organizationRegistrationInfo)\r\n   \r\n    console.log(organizationRegistrationInfo)\r\n} \r\n\r\nconst handleOrganizationRegistrationSubmit=(e:any)=>{\r\n    if(errorsOrganizerRegistration.firstName.length!==0 ||\r\n        errorsOrganizerRegistration.lastName.length!==0  ||\r\n        errorsOrganizerRegistration.email.length!==0||\r\n        errorsOrganizerRegistration.password.length!==0||\r\n        errorsOrganizerRegistration.confirmPassword.length!==0      \r\n      ){\r\n      alert(\"Fill up all the fields carefully first....\")\r\n    }else{\r\n      alert(\"You have registered successfully....Press OK to go the next page\")\r\n      history.push('organizationDetail')\r\n    }\r\n    e.preventDefault()\r\n}\r\n    \r\n    return (\r\n        <>\r\n         <div  className=\"d-flex justify-content-center organization-registration-mother-container \" >\r\n            <div className=\"organization-registration-container container-fluid  my-auto bg-white\">\r\n            <h1>Create an account</h1> \r\n        <form className=\" container mt-4\" onSubmit={handleOrganizationRegistrationSubmit} >\r\n            <span className=\"d-flex   \">\r\n              <span>\r\n            <input type=\"text\" className=\"form-control organization-registration-form-control form-control-sm first-name overflow-hidden\" name=\"firstName\"\r\n             value={organizationRegistrationInfo.firstName} \r\n            onChange={handleOrganizationRegistrationChange}\r\n         onBlur={handleOrganizationRegistrationCapture }\r\n             placeholder=\"First Name\"\r\n             required/>\r\n              {\r\n                 errorsOrganizerRegistration.firstName &&<span className=\"text-danger\">{errorsOrganizerRegistration.firstName}</span>\r\n             } \r\n             </span>\r\n            \r\n             &nbsp;&nbsp;&nbsp; &nbsp; &nbsp; <br/>\r\n            \r\n            \r\n             <span >  \r\n            <input type=\"text\" className=\"form-control organization-registration-form-control form-control-sm last-name  overflow-hidden \"\r\n             name=\"lastName\" \r\n             placeholder=\"Last Name\"\r\n             onChange={handleOrganizationRegistrationChange}\r\n         onBlur={handleOrganizationRegistrationCapture }\r\n             value={organizationRegistrationInfo.lastName} \r\n            required/>\r\n             {\r\n                 errorsOrganizerRegistration.lastName &&<span className=\"text-danger \">{errorsOrganizerRegistration.lastName}</span>\r\n             }\r\n             </span>\r\n              \r\n            </span>\r\n            <input type=\"email\" className={`form-control organization-registration-form-control form-control-sm  ${errorsOrganizerRegistration.lastName||errorsOrganizerRegistration.firstName ? 'mt-1':'mt-3'}`} placeholder=\"Your Official Email Id\"\r\n             name=\"email\" \r\n             onChange={handleOrganizationRegistrationChange}\r\n        onBlur= {handleOrganizationRegistrationCapture }\r\n             value={organizationRegistrationInfo.email} \r\n             required/>\r\n              {\r\n                 errorsOrganizerRegistration.email &&<span className=\"text-danger\">{errorsOrganizerRegistration.email}</span>\r\n            }\r\n            <br/>\r\n           \r\n            <input type=\"password\" className=\"form-control organization-registration-form-control form-control-sm \" placeholder=\"Password\" \r\n             value={organizationRegistrationInfo.password} \r\n             onChange={handleOrganizationRegistrationChange}\r\n             onBlur={handleOrganizationRegistrationCapture }\r\n            name=\"password\" required/>\r\n            {\r\n                 errorsOrganizerRegistration.password &&<span className=\"text-danger\">{errorsOrganizerRegistration.password}</span>\r\n            }\r\n            <br/>\r\n            <input type=\"password\"\r\n             name=\"confirmPassword\" \r\n             className=\"form-control organization-registration-form-control form-control-sm \"\r\n              placeholder=\"Confirm Password\"\r\n            value={organizationRegistrationInfo.confirmPassword} \r\n              onChange={handleOrganizationRegistrationChange}\r\n              onBlur={handleOrganizationRegistrationCapture }\r\n              required />\r\n              {\r\n                errorsOrganizerRegistration.confirmPassword && <span className=\"text-danger\">{errorsOrganizerRegistration.confirmPassword}</span>\r\n              }\r\n            <input type=\"submit\" className=\"btn btn-success mt-4 w-100\" value=\"Register now\"/>\r\n  \r\n        </form>\r\n        <p className=\"mt-2\">Do you have an account?  <span  className=\"text-primary login-click\"  onClick={()=>{history.push('/login')}} ><u>Click here to login</u></span> </p>\r\n     \r\n        </div>  \r\n        </div>   \r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrganizationRegistration;","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\StudentRegistration\\StudentRegistration.tsx",["92","93"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport './StudentRegistration.css'\r\n\r\nconst StudentRegistration = () => {\r\n\r\n    const history=useHistory()\r\n    const [studentRegistrationInfo,setStudentRegistrationInfo]=useState({\r\n        firstName:'',\r\n        lastName:'',\r\n        email:'',\r\n        password:'',\r\n        confirmPassword:''\r\n    })\r\n\r\nconst [errorsStudentRegistration,setErrorsStudentRegistration]=useState({\r\n    firstName:'',\r\n    lastName:'',\r\n    email:'',\r\n    password:'',\r\n    confirmPassword:''\r\n})\r\n\r\nconst validateStudentRegistration=(studentRegistrationInfo:any)=>{\r\n\r\n        if(studentRegistrationInfo.firstName.trim()){\r\n            errorsStudentRegistration.firstName=\"\"\r\n          }\r\n    \r\n        if(!studentRegistrationInfo.firstName.trim()){\r\n          errorsStudentRegistration.firstName=\"\"\r\n        }\r\n       else if (!/^(?=.{1,50}$)[a-z]+(?:['_.\\s][a-z]+)*$/i.test(studentRegistrationInfo.firstName.trim())) {\r\n              errorsStudentRegistration.firstName = 'Enter a valid name'\r\n        }\r\n\r\n        \r\n        if(studentRegistrationInfo.lastName.trim()){\r\n            errorsStudentRegistration.lastName=\"\"\r\n          }\r\n    \r\n        if(!studentRegistrationInfo.lastName.trim()){\r\n          errorsStudentRegistration.lastName=\"\"\r\n        }\r\n      else if (!/^[a-zA-Z]+$/.test(studentRegistrationInfo.lastName.trim())) {\r\n        errorsStudentRegistration.lastName = 'Enter a valid name'\r\n      }\r\n\r\n      if (studentRegistrationInfo.email) {\r\n        errorsStudentRegistration.email = ''\r\n      } \r\n      if (!studentRegistrationInfo.email) {\r\n        errorsStudentRegistration.email = ''\r\n      } \r\n      else if (!/\\S+@\\S+\\.\\S+/.test(studentRegistrationInfo.email)) {\r\n        errorsStudentRegistration.email = 'Enter valid email address'\r\n      }\r\n\r\n      if(studentRegistrationInfo.password){\r\n          errorsStudentRegistration.password=\"\"\r\n      }if(!studentRegistrationInfo.password){\r\n        errorsStudentRegistration.password=\"\"\r\n    }else if(studentRegistrationInfo.password.length<8){\r\n       errorsStudentRegistration.password=\"Password needs to be 8 characters or more\"\r\n      }\r\n\r\n     if(studentRegistrationInfo.confirmPassword){\r\n          errorsStudentRegistration.confirmPassword=\"\"\r\n      } if(!studentRegistrationInfo.confirmPassword){\r\n          errorsStudentRegistration.confirmPassword=\"\"\r\n      }else if(studentRegistrationInfo.confirmPassword && studentRegistrationInfo.password.length==0){\r\n        errorsStudentRegistration.confirmPassword=\"First  fill up the password field\"\r\n    }else if(studentRegistrationInfo.confirmPassword !==studentRegistrationInfo.password){\r\n          errorsStudentRegistration.confirmPassword=\"Password did not match...Check again\"\r\n      }\r\n\r\n      console.log(errorsStudentRegistration);\r\n      \r\n     \r\n      \r\n}\r\n\r\n\r\nconst  handleStudentRegistrationChange =(e:any) =>{\r\n    const{name,value}=e.target\r\n    setStudentRegistrationInfo({\r\n...studentRegistrationInfo,\r\n[name]:value\r\n    } )\r\n \r\n  \r\n   \r\n    console.log(studentRegistrationInfo)\r\n} \r\nconst handleStudentRegistrationCapture =(e:any) =>{\r\n    const{name,value}=e.target\r\n    setStudentRegistrationInfo({\r\n...studentRegistrationInfo,\r\n[name]:value\r\n    } )\r\n \r\nvalidateStudentRegistration(studentRegistrationInfo)\r\n   \r\n    console.log(studentRegistrationInfo)\r\n} \r\n\r\nconst handleStudentRegistrationSubmit=(e:any)=>{\r\n    if(errorsStudentRegistration.firstName.length!==0 ||\r\n        errorsStudentRegistration.lastName.length!==0  ||\r\n        errorsStudentRegistration.email.length!==0||\r\n        errorsStudentRegistration.password.length!==0||\r\n        errorsStudentRegistration.confirmPassword.length!==0      \r\n      ){\r\n        alert(\"Fill up all the fields carefully first....\")\r\n      }else{\r\n        alert(\"You have been registered successfully....\")\r\n    \r\n    }\r\n    e.preventDefault()\r\n}\r\n    \r\n    return (\r\n        <>\r\n              <div  className=\"d-flex justify-content-center organization-registration-mother-container \" >\r\n            <div className=\"organization-registration-container container-fluid  my-auto bg-white\">\r\n            <h1>Create an account</h1> \r\n        <form className=\" container  mt-4\"onSubmit={handleStudentRegistrationSubmit} >\r\n            <span className=\"d-flex \">\r\n                <span>\r\n                <input type=\"text\" name=\"firstName\" className=\"form-control organization-registration-form-control form-control-sm first-name overflow-hidden \"  \r\n            value={studentRegistrationInfo.firstName} \r\n        onChange={handleStudentRegistrationChange}\r\n         onBlur={handleStudentRegistrationCapture } \r\n         placeholder=\"First Name\" required/>\r\n            {\r\n                 errorsStudentRegistration.firstName &&<span className=\"text-danger\">{errorsStudentRegistration.firstName}</span>\r\n             } \r\n                </span>\r\n            &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;<br/>\r\n            <span>\r\n            <input type=\"text\"\r\n             className=\"form-control organization-registration-form-control form-control-sm last-name overflow-hidden\" placeholder=\"Last Name\"\r\n            name=\"lastName\"\r\n             onChange={handleStudentRegistrationChange}\r\n             onBlur={handleStudentRegistrationCapture }\r\n                 value={studentRegistrationInfo.lastName} \r\n              required/>\r\n                {\r\n                 errorsStudentRegistration.lastName &&<span className=\"text-danger \">{errorsStudentRegistration.lastName}</span>\r\n             }\r\n            </span>\r\n            </span>\r\n            <input type=\"email\" className={`form-control organization-registration-form-control form-control-sm  ${errorsStudentRegistration.lastName||errorsStudentRegistration.firstName ? 'mt-2':'mt-3'}`}  placeholder=\"Your Email Id\"\r\n             name=\"email\" \r\n             onChange={handleStudentRegistrationChange}\r\n        onBlur= {handleStudentRegistrationCapture }\r\n             value={studentRegistrationInfo.email}  \r\n            required/>\r\n              {\r\n                 errorsStudentRegistration.email &&<span className=\"text-danger\">{errorsStudentRegistration.email}</span>\r\n            }\r\n            <br/>\r\n\r\n            <input type=\"password\" className=\"form-control organization-registration-form-control form-control-sm \" placeholder=\"Password\"\r\n              value={studentRegistrationInfo.password} \r\n              onChange={handleStudentRegistrationChange}\r\n              onBlur={handleStudentRegistrationCapture }\r\n             name=\"password\" required/>\r\n               {\r\n                 errorsStudentRegistration.password &&<span className=\"text-danger\">{errorsStudentRegistration.password}</span>\r\n            }\r\n             <br/>\r\n\r\n            <input type=\"password\"className=\"form-control organization-registration-form-control form-control-sm \" placeholder=\"Confirm Password\"\r\n            name=\"confirmPassword\"\r\n              value={studentRegistrationInfo.confirmPassword} \r\n              onChange={handleStudentRegistrationChange}\r\n              onBlur={handleStudentRegistrationCapture }\r\n            required />\r\n                {\r\n                errorsStudentRegistration.confirmPassword && <span className=\"text-danger\">{errorsStudentRegistration.confirmPassword}</span>\r\n              }\r\n\r\n            <input type=\"submit\" className=\"btn btn-sm btn-student text-white  mt-4 w-100\" value=\"Sign Up\"/>\r\n  \r\n        </form>\r\n        <p className=\"mt-3\">Do you have an account?  <span  className=\"text-primary login-click\" onClick={()=>{history.push('/login')}} ><u>Click here to login</u></span> </p>\r\n     \r\n        </div>  \r\n        </div>   \r\n        </>\r\n    );\r\n};\r\n\r\nexport default StudentRegistration;","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\MentorRegistration\\MentorRegistration.tsx",["94","95"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst MentorRegistration = () => {\r\n    const history=useHistory()\r\n    const [mentorRegistrationInfo,setMentorRegistrationInfo]=useState({\r\n        firstName:'',\r\n        lastName:'',\r\n        email:'',\r\n        password:'',\r\n        confirmPassword:''\r\n    })\r\n\r\nconst [errorsMentorRegistration,setErrorsMentorRegistration]=useState({\r\n    firstName:'',\r\n    lastName:'',\r\n    email:'',\r\n    password:'',\r\n    confirmPassword:''\r\n})\r\n\r\nconst validateMentorRegistration=(mentorRegistrationInfo:any)=>{\r\n\r\n        if(mentorRegistrationInfo.firstName.trim()){\r\n            errorsMentorRegistration.firstName=\"\"\r\n          }\r\n    \r\n        if(!mentorRegistrationInfo.firstName.trim()){\r\n          errorsMentorRegistration.firstName=\"\"\r\n        }\r\n       else if (!/^(?=.{1,50}$)[a-z]+(?:['_.\\s][a-z]+)*$/i.test(mentorRegistrationInfo.firstName.trim())) {\r\n              errorsMentorRegistration.firstName = 'Enter a valid name'\r\n        }\r\n\r\n        \r\n        if(mentorRegistrationInfo.lastName.trim()){\r\n            errorsMentorRegistration.lastName=\"\"\r\n          }\r\n    \r\n        if(!mentorRegistrationInfo.lastName.trim()){\r\n          errorsMentorRegistration.lastName=\"\"\r\n        }\r\n      else if (!/^[a-zA-Z]+$/.test(mentorRegistrationInfo.lastName.trim())) {\r\n        errorsMentorRegistration.lastName = 'Enter a valid name'\r\n      }\r\n\r\n      if (mentorRegistrationInfo.email) {\r\n        errorsMentorRegistration.email = ''\r\n      } \r\n      if (!mentorRegistrationInfo.email) {\r\n        errorsMentorRegistration.email = ''\r\n      } \r\n      else if (!/\\S+@\\S+\\.\\S+/.test(mentorRegistrationInfo.email)) {\r\n        errorsMentorRegistration.email = 'Enter valid email address'\r\n      }\r\n\r\n      if(mentorRegistrationInfo.password){\r\n          errorsMentorRegistration.password=\"\"\r\n      }if(!mentorRegistrationInfo.password){\r\n        errorsMentorRegistration.password=\"\"\r\n    }else if(mentorRegistrationInfo.password.length<8){\r\n       errorsMentorRegistration.password=\"Password needs to be 8 characters or more\"\r\n      }\r\n\r\n     if(mentorRegistrationInfo.confirmPassword){\r\n          errorsMentorRegistration.confirmPassword=\"\"\r\n      } if(!mentorRegistrationInfo.confirmPassword){\r\n          errorsMentorRegistration.confirmPassword=\"\"\r\n      }else if(mentorRegistrationInfo.confirmPassword && mentorRegistrationInfo.password.length==0){\r\n        errorsMentorRegistration.confirmPassword=\"First  fill up the password field\"\r\n    }else if(mentorRegistrationInfo.confirmPassword !==mentorRegistrationInfo.password){\r\n          errorsMentorRegistration.confirmPassword=\"Password did not match...Check again\"\r\n      }\r\n\r\n      console.log(errorsMentorRegistration);\r\n      \r\n     \r\n      \r\n}\r\n\r\n\r\nconst  handleMentorRegistrationChange =(e:any) =>{\r\n    const{name,value}=e.target\r\n    setMentorRegistrationInfo({\r\n...mentorRegistrationInfo,\r\n[name]:value\r\n    } )\r\n \r\n  \r\n   \r\n    console.log(mentorRegistrationInfo)\r\n} \r\nconst handleMentorRegistrationCapture=(e:any) =>{\r\n    const{name,value}=e.target\r\n    setMentorRegistrationInfo({\r\n...mentorRegistrationInfo,\r\n[name]:value\r\n    } )\r\n \r\nvalidateMentorRegistration(mentorRegistrationInfo)\r\n   \r\n    console.log(mentorRegistrationInfo)\r\n} \r\n\r\nconst handleMentorRegistrationSubmit=(e:any)=>{\r\n    if(errorsMentorRegistration.firstName.length!==0 ||\r\n        errorsMentorRegistration.lastName.length!==0  ||\r\n        errorsMentorRegistration.email.length!==0||\r\n        errorsMentorRegistration.password.length!==0||\r\n        errorsMentorRegistration.confirmPassword.length!==0      \r\n      ){\r\n      alert(\"Fill up all the fields carefully first....\")\r\n    }else{\r\n      alert(\"You have been registered successfully....\")\r\n    \r\n    }\r\n    e.preventDefault()\r\n}\r\n\r\n    return (\r\n        <>\r\n              <div  className=\"d-flex justify-content-center organization-registration-mother-container \" >\r\n            <div className=\"organization-registration-container container-fluid  my-auto bg-white\">\r\n            <h1>Create an account</h1> \r\n            <form className=\" container  mt-4\"onSubmit={handleMentorRegistrationSubmit} >\r\n            <span className=\"d-flex \">\r\n                <span>\r\n                <input type=\"text\" name=\"firstName\" className=\"form-control organization-registration-form-control form-control-sm first-name overflow-hidden \"  \r\n            value={mentorRegistrationInfo.firstName} \r\n        onChange={handleMentorRegistrationChange}\r\n         onBlur={handleMentorRegistrationCapture } \r\n         placeholder=\"First Name\" required/>\r\n            {\r\n                 errorsMentorRegistration.firstName &&<span className=\"text-danger\">{errorsMentorRegistration.firstName}</span>\r\n             } \r\n                </span>\r\n            &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;<br/>\r\n            <span>\r\n            <input type=\"text\"\r\n             className=\"form-control organization-registration-form-control form-control-sm last-name overflow-hidden\" placeholder=\"Last Name\"\r\n            name=\"lastName\"\r\n             onChange={handleMentorRegistrationChange}\r\n             onBlur={handleMentorRegistrationCapture }\r\n                 value={mentorRegistrationInfo.lastName} \r\n              required/>\r\n                {\r\n                 errorsMentorRegistration.lastName &&<span className=\"text-danger \">{errorsMentorRegistration.lastName}</span>\r\n             }\r\n            </span>\r\n            </span>\r\n            <input type=\"email\" className={`form-control organization-registration-form-control form-control-sm  ${errorsMentorRegistration.lastName||errorsMentorRegistration.firstName ? 'mt-2':'mt-3'}`}  placeholder=\"Your Email Id\"\r\n             name=\"email\" \r\n             onChange={handleMentorRegistrationChange}\r\n        onBlur= {handleMentorRegistrationCapture }\r\n             value={mentorRegistrationInfo.email}  \r\n            required/>\r\n              {\r\n                 errorsMentorRegistration.email &&<span className=\"text-danger\">{errorsMentorRegistration.email}</span>\r\n            }\r\n            <br/>\r\n\r\n            <input type=\"password\" className=\"form-control organization-registration-form-control form-control-sm \" placeholder=\"Password\"\r\n              value={mentorRegistrationInfo.password} \r\n              onChange={handleMentorRegistrationChange}\r\n              onBlur={handleMentorRegistrationCapture }\r\n             name=\"password\" required/>\r\n               {\r\n                 errorsMentorRegistration.password &&<span className=\"text-danger\">{errorsMentorRegistration.password}</span>\r\n            }\r\n             <br/>\r\n\r\n            <input type=\"password\"className=\"form-control organization-registration-form-control form-control-sm \" placeholder=\"Confirm Password\"\r\n            name=\"confirmPassword\"\r\n              value={mentorRegistrationInfo.confirmPassword} \r\n              onChange={handleMentorRegistrationChange}\r\n              onBlur={handleMentorRegistrationCapture }\r\n            required />\r\n                {\r\n                errorsMentorRegistration.confirmPassword && <span className=\"text-danger\">{errorsMentorRegistration.confirmPassword}</span>\r\n              }\r\n\r\n            <input type=\"submit\" className=\"btn btn-sm btn-success text-white  mt-4 w-100\" value=\"Sign Up\"/>\r\n  \r\n        </form>\r\n        <p className=\"mt-3\">Do you have an account?  <span  className=\"text-primary login-click\" onClick={()=>{history.push('/login')}} ><u>Click here to login</u></span> </p>\r\n     \r\n        </div>  \r\n        </div>   \r\n        </>\r\n    );\r\n};\r\n\r\nexport default MentorRegistration;","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\OrganizationDetail\\OrganizationDetail.tsx",["96"],"import React, { useState } from 'react';\r\nimport './OrganizationDetail.css'\r\n\r\nconst OrganizationDetail = () => {\r\n    const [organizationDetailInfo,setOrganizationDetailInfo]=useState({\r\n        organizationName:'',\r\n        about:'',\r\n        socialMediaPage:'',\r\n        organizationWebsite:''\r\n       \r\n    })\r\n    const [errorsOrganizationDetail,setErrorsOrganizationDetail]=useState({\r\n       about:''\r\n    })\r\n    const validateOrganizationDetailInfo = (organizationDetailInfo:any)=>{\r\n        if(organizationDetailInfo.about.trim()){\r\n            errorsOrganizationDetail.about=\"\"\r\n          }\r\n    \r\n        if(!organizationDetailInfo.about.trim()){\r\n          errorsOrganizationDetail.about=\"\"\r\n        }\r\n       else if (!/^.{10,}$/.test(organizationDetailInfo.about.trim())) {\r\n            errorsOrganizationDetail.about= 'Minimum 10 characters are required here'\r\n      }\r\n      console.log(errorsOrganizationDetail);\r\n      \r\n    }\r\n\r\n\r\n    const  handleOrganizationDetailChange =(e:any) =>{\r\n        const{name,value}=e.target\r\n        setOrganizationDetailInfo({\r\n    ...organizationDetailInfo,\r\n    [name]:value\r\n        } )\r\n     console.log(organizationDetailInfo)\r\n    } \r\n\r\n\r\n\r\n    const  handleOrganizationDetailBlur=(e:any)=>{\r\n        // if(e.target.name==\"about\"){\r\n        //     if(!/^.{10,}$/.test(e.target.value.trim()) && e.target.value.length!==0){\r\n        //         alert(\"Minimum 10 characters are required here\")\r\n        //     }\r\n        // }\r\n        const{name,value}=e.target\r\n    setOrganizationDetailInfo({\r\n...organizationDetailInfo,\r\n[name]:value\r\n    } )\r\n  \r\n    console.log(organizationDetailInfo);\r\n    validateOrganizationDetailInfo(organizationDetailInfo)\r\n    }\r\n\r\n\r\n   \r\n    return (\r\n        <>\r\n                <div  className=\"d-flex justify-content-center organization-registration-mother-container \" >\r\n            <div className=\"organization-detail-container container-fluid  my-auto bg-white\">\r\n                <form>\r\n               <div className=\" mt-2 mb-2\">\r\n               <h6 className=\" text-start m-0\"> <label >Organization Name</label></h6>\r\n                   <input type=\"text\" className=\"form-control  organization-detail-input form-control-md  \" placeholder=\"Type your organization name here\"required/>\r\n             </div>\r\n          \r\n               <div className={`${errorsOrganizationDetail.about||errorsOrganizationDetail.about ? '':'mb-2'}`}>\r\n               <h6 className=\" text-start m-0\"> <label >About</label></h6>\r\n                   \r\n         <textarea name=\"about\" onBlur={handleOrganizationDetailBlur} onChange={handleOrganizationDetailChange} className=\"form-control  organization-detail-textarea\" id=\"\" cols={5} rows={5}  placeholder=\"Write about your organization  *\"required/>\r\n         {\r\n                 errorsOrganizationDetail.about &&<span className=\"text-danger\">{errorsOrganizationDetail.about}</span>\r\n             } \r\n            </div>\r\n            <div className={`${errorsOrganizationDetail.about||errorsOrganizationDetail.about ? 'mb-2':'mt-2 mb-2'}`} >\r\n            <h6 className=\" text-start m-0\"> <label >Social Media Page</label></h6>\r\n            <input type=\"url\" className=\"form-control organization-detail-input  form-control-md \" placeholder=\"Type your social media page link here\"required/>\r\n            </div>\r\n            <div className=\" \">\r\n            <h6 className=\" text-start m-0\"> <label >Organization Website</label></h6>\r\n\r\n            <input type=\"url\" className=\"form-control  organization-detail-input form-control-md \" placeholder=\"Type your organization website link here\" required/>\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-success mt-4  w-100\" value=\"Submit\"/>\r\n            </form>\r\n   \r\n          \r\n        </div>  \r\n        </div> \r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrganizationDetail;","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\NotFound\\NotFound.tsx",[],"F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\NavHome\\NavHome.tsx",["97","98","99"],"import React, { useState } from 'react';\r\nimport { Drawer, Button, List, ListItem, ListItemText, ListItemIcon,Menu ,MenuItem, MenuList} from '@material-ui/core';\r\nimport { BsList } from \"react-icons/bs\";\r\nimport logo from '../../images/logo.png';\r\nimport './NavHome.css'\r\nimport { useHistory } from 'react-router';\r\n\r\nconst NavHome = () => {\r\n\r\n  const history=useHistory()\r\n\r\n  const [openDrawer,setOpenDrawer]=useState<any>(false)\r\n  const handleRegisterMenuClose=()=>{\r\n    setAnchorElRegister(null)\r\n  }\r\n  const handleProgramsMenuClose=()=>{\r\n    setAnchorElPrograms(null)\r\n  }\r\n\r\n  const[anchorElRegister,setAnchorElRegister]=useState(null)\r\n  const[anchorElPrograms,setAnchorElPrograms]=useState(null)\r\n\r\n  const handleOpenMenuRegister=(e:any)=>{\r\n      setAnchorElRegister(e.currentTarget)\r\n  }\r\n\r\n  const handleOpenMenuPrograms=(e:any)=>{\r\n    setAnchorElPrograms(e.currentTarget)\r\n}\r\n    return (\r\n        <>\r\n        {/* <ul className=\"nav justify-content-center\">\r\n  <li className=\"nav-item\">\r\n    <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Active</a>\r\n  </li>\r\n  <li className=\"nav-item\">\r\n    <a className=\"nav-link\" href=\"#\">Link</a>\r\n  </li>\r\n  <li className=\"nav-item\">\r\n    <a className=\"nav-link\" href=\"#\">Link</a>\r\n  </li>\r\n  <li className=\"nav-item\">\r\n    <a className=\"nav-link disabled\" href=\"#\"aria-disabled=\"true\">Disabled</a>\r\n  </li>\r\n</ul> */}\r\n           {/* <nav classNameName=\"navbar navbar-expand-lg navbar-light \">\r\n     \r\n        <button classNameName=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span classNameName=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      \r\n        <div classNameName=\"collapse navbar-collapse \" id=\"navbarSupportedContent\">\r\n          <ul classNameName=\"navbar-nav \">\r\n          <li classNameName=\"nav-item dropdown \">\r\n          <a classNameName=\"nav-link dropdown-toggle btn btn-primary\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Programs\r\n          </a>\r\n          <ul classNameName=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a classNameName=\"dropdown-item \" href=\"#\">Browse by category</a></li>\r\n            <li><a classNameName=\"dropdown-item\" href=\"#\">Browse by organizer </a></li>\r\n            {/* <li><hr classNameName=\"dropdown-divider\"/></li> */}\r\n            {/* <li><a classNameName=\"dropdown-item\" href=\"#\">All programs</a></li>\r\n          </ul>\r\n        </li>\r\n            <li classNameName=\"nav-item active\">\r\n              <a classNameName=\"nav-link\" href=\"#\">Home </a>\r\n            </li>\r\n            <li classNameName=\"nav-item\">\r\n              <a classNameName=\"nav-link \" href=\"#\">Organizer</a>\r\n            </li>\r\n            <li classNameName=\"nav-item\">\r\n              <a classNameName=\"nav-link\" href=\"#\">Our Team</a>\r\n            </li>\r\n            <li classNameName=\"nav-item btn-md btn-success pl-2 pr-2\">\r\n              <a classNameName=\"nav-link\" href=\"#\">Login</a>\r\n            </li>\r\n            */}\r\n            {/* <li classNameName=\"nav-item dropdown  \">\r\n           <a classNameName=\"nav-link dropdown-toggle btn btn-primary\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n             Register\r\n           </a>\r\n           <ul classNameName=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n           <li><a classNameName=\"dropdown-item \" href=\"#\"> As an organizer</a></li>\r\n            <li><a classNameName=\"dropdown-item\" href=\"#\">As a mentor </a></li>  */}\r\n            {/* <li><hr classNameName=\"dropdown-divider\"/></li> */}\r\n            {/* <li><a classNameName=\"dropdown-item\" href=\"#\">As a student</a></li>\r\n          </ul>\r\n        </li>\r\n          </ul>\r\n       \r\n        </div>\r\n      </nav>   */}\r\n      <div className=\"d-flex container-fluid drawer-control  justify-content-between\">\r\n      <img src={logo} className=\"logo logo-sm-img m-0\"/>\r\n      <div className=\"me-1  bs-list\">\r\n        <div className=\"bs-list-inner\">\r\n      <BsList fontSize={40} onClick={()=>setOpenDrawer(true)}/>\r\n      </div>\r\n\r\n      </div>\r\n      </div>\r\n\r\n<Drawer\r\n\r\nanchor=\"right\"\r\nonClose={()=>setOpenDrawer(false)}\r\nopen={openDrawer}\r\n>\r\n  \r\n  <List>\r\n\r\n    <ListItem button divider  className=\"bg-warning\">\r\n      <ListItemIcon>\r\n      <ListItemText>\r\n    \r\n Organizations\r\n \r\n       \r\n      </ListItemText>\r\n      </ListItemIcon>\r\n    </ListItem>\r\n \r\n   \r\n   \r\n     <ListItem button divider onClick={handleOpenMenuPrograms} \r\n     aria-controls=\"menu1\" \r\n     className=\"bg-primary\"\r\n    >\r\n      <ListItemIcon>\r\n      <ListItemText>\r\n        \r\n     Programs\r\n       \r\n      \r\n </ListItemText>\r\n      </ListItemIcon>\r\n    </ListItem>\r\n    \r\n      \r\n   \r\n    \r\n \r\n\r\n  <ListItem button divider className=\"bg-primary\"  \r\n  onClick={handleOpenMenuRegister} \r\n  aria-controls=\"menu1\" >\r\n      <ListItemIcon>\r\n      <ListItemText>\r\n        \r\n      Register\r\n       \r\n       \r\n      </ListItemText>\r\n      </ListItemIcon>\r\n    </ListItem>\r\n \r\n  \r\n\r\n<ListItem button divider \r\nclassName=\"bg-success\"\r\n onClick={()=>history.push('/login')}  >\r\n      <ListItemIcon>\r\n      <ListItemText>\r\n        Login\r\n      </ListItemText>\r\n      </ListItemIcon>\r\n    </ListItem>\r\n    \r\n  </List>\r\n</Drawer>\r\n<Menu className=\"menu-register mt-5 w-100\"\r\n      id=\"menu\" \r\n     anchorEl={anchorElRegister}\r\n     onClose={handleRegisterMenuClose} \r\n     open={Boolean(anchorElRegister)}>\r\n  <MenuItem onClick={()=>history.push('/student')}>Student</MenuItem>\r\n  <MenuItem onClick={()=>history.push('/mentor')}>Mentor</MenuItem>\r\n  <MenuItem onClick={()=>history.push('/organizer')}>Organizer</MenuItem>\r\n</Menu>\r\n\r\n<Menu className=\"menu-register mt-5 w-100\"\r\n  id=\"menu1\"\r\nanchorEl={anchorElPrograms}\r\n onClose={handleProgramsMenuClose} \r\n open={Boolean(anchorElPrograms)}>\r\n  <MenuItem>Browse by category</MenuItem>\r\n  <MenuItem>Browse by organizer</MenuItem>\r\n  <MenuItem>All programs</MenuItem>\r\n</Menu>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavHome;","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\HomePageContainer\\HomepageContainer.tsx",["100","101","102","103","104","105"],"import React from 'react';\r\nimport './HomePageContainer.css'\r\nimport girl from '../../images/girl.png';\r\nimport boy from '../../images/boy.png';\r\nimport rabbit from '../../images/rabbit.png';\r\nimport tv from '../../images/tv.png';\r\nimport building from '../../images/building.png';\r\nimport calendar from '../../images/calendar.png';\r\nimport Header from '../Header/Header';\r\nimport Footer from '../Footer/Footer';\r\n\r\n\r\nconst HomepageContainer = () => {\r\n\r\n\r\n    \r\n    return (\r\n        <div className=\"home-page-container d-block \">\r\n       <Header/>\r\n          {/* <CatalysedTitle/> */}\r\n          <div className=\" text-center catalysed-background container-fluid w-100  p-0\">\r\n                  <span className=\"catalysed-title text-center container\">CATALYSED</span>\r\n                  </div> \r\n             {/* <CatalysedTitle/> */}\r\n          {/* <AboutUs/> */}\r\n          <div className=\"row w-auto mw-auto p-0\">\r\n            <div className=\"col-md-3 p-0\">\r\n            <img src={girl} className=\" w-100 h-100 girl\" />\r\n            </div>\r\n            <div className=\"col-md-6 mw-auto d-flex justify-content-center align-items-center about-us-background\">\r\n               <div className=\"\">\r\n             <h1 className=\"about-us-title \"> <span className=\"about-us \">About Us</span> </h1>\r\n             <h4 className=\"about-us-title-second text-secondary  mt-4\">Give every child's dream a better chance</h4>\r\n             <p className=\"about-us-description text-secondary text-justify mt-5 m-auto w-50\">We aim to help every child colour the world by facilitating easy and streamlined access to quality guidance and education by providing them with a platform that helps them unveil their potential and introduce them to phenomenal and unforeseen opportunities.</p>\r\n             </div>\r\n            </div>\r\n            <div className=\"col-md-3 p-0\">\r\n          <img src={boy} className=\"w-100 h-100 boy \" />\r\n            </div>\r\n        </div>\r\n        {/* <AboutUs/> */}\r\n          {/* <MissionVision/> */}\r\n          <div className=\"row mission-vision \">\r\n                \r\n                <div className=\"col-md-6  d-flex justify-content-center align-items-center  bg-dark  text-white\">\r\n                    <div>\r\n                 <h2 className=\"mission-title mt-2\">Mission</h2>\r\n                 <p className=\"mission-description w-75 m-auto mb-5 \"><span className=\"mission-description-quote\" >\"</span>Equip children in search of guidance and mentoring with new routes to attain them by providing them with a platform to collaborate and connect with mentors and interest groups.<span className=\"mission-description-quote \" >\"</span></p>\r\n                 </div>\r\n                </div>\r\n                <div className=\"col-md-6    bg-white text-dark\">\r\n                    <div>\r\n                <h2 className=\"vision-title mt-5\">Vision</h2>\r\n                <p className=\"vision-description w-75 m-auto mt-4 mb-5 \"><span className=\"vision-description-quote\">\"</span>We seek to unlock the potential of the students by connecting them with the right  opportunities and the right people.<span className=\"vision-description-quote\">\"</span></p>\r\n                </div>\r\n                </div>\r\n               </div>\r\n                {/* <MissionVision/> */}\r\n          {/* <PersonalizedProfile/> */}\r\n          <div className=\"row w-auto personalized-profile \">\r\n            <div className=\"col-md-4  p-0\">\r\n                <img src={rabbit} className=\"w-100 h-100\"/>\r\n            </div>\r\n            <div className=\"col-md-8 align-items-center d-flex personalized-profile-background   justify-content-center \">\r\n            <div className=\"\">\r\n                <h2 className=\" personalized-profile-title  text-center\">Personalized Profile <br/> Builder</h2>\r\n          \r\n                <p className=\"personalized-profile-description text-justify fw-normal mt-5  w-50 m-auto \">\r\n                Our personalized profile builder is filled with amusing questions and queries to gauge your interests and  hobbies. Helping us in this is our fine-tuned NLP engine to identify and decode features that don't meet the eye. Privacy of data is one of our main concerns and we tackle that through homomorphic encryption, eliminating the scenario of unsecured data.\r\n            \r\n                </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {/* <PersonalizedProfile/> */}\r\n          {/* <SearchRecommendation/> */}\r\n          <div className=\" row w-auto \">\r\n                <div className=\"col-md-8 d-flex justify-content-center align-items-center search-recommendation-background\">\r\n                    <div className=\"\">\r\n                    <h2 className=\"search-recommendation-title d-flex justify-content-center container text-justify\">Search and<br/> Recommendation</h2>\r\n                   <p className=\"search-recommendation-description  w-50 m-auto mt-5\">\r\n                       The student can search for mentors and show intent to connect.The search is made seamless assisted by Elasticsearch. The recommendation system powered by a hybrid of collaborative and content based filtering uses the profile questions to match similar students and mentors.\r\n                   </p>\r\n                    </div>\r\n                  \r\n                </div>\r\n               <div className=\"col-md-4 p-0\">\r\n                    <img src={tv} className=\"w-100 h-100 \"/>\r\n                </div>\r\n            </div>\r\n             {/* <SearchRecommendation/> */}\r\n          {/* <ProgramsInterest/> */}\r\n          <div className=\"row w-auto\">\r\n                <div className=\"col-md-4 p-0\">\r\n                    <img src={building} className=\"w-100 h-100 \"/>\r\n                </div>\r\n                <div className=\"col-md-8 d-flex justify-content-center align-items-center programs-interest-background\">\r\n                    <div className=\"\" style={{}}>\r\n                    <h2 className=\"programs-interest-title\">Programs and <br/>Interest Groups</h2>\r\n                    <p className=\"  programs-interest-description m-auto mt-5 w-50 \">The platform quickly learns your interests and preference and introduces to you to programs and interest groups best for you. Our collaboration with multiple not-for-profit organizations and accomplished mentors enable us to pioneer fellowships that provide students with leadership development, cross-cultural experience and the opportunity to make a progressive social impact not only on themselves but the world at large.</p>\r\n                    </div>\r\n                   \r\n                </div>\r\n            </div>\r\n             {/* <ProgramsInterest/> */}\r\n          {/* <PlanSchedule/> */}\r\n          <div className=\"row w-auto\">\r\n                <div className=\"col-md-8 plan-schedule-background d-flex justify-content-center align-items-center \">\r\n                    <div className=\"\">\r\n                   <h1 className=\"plan-schedule-title mt-3\">Plan, Schedule and<br/> Document</h1>\r\n                   <p  className=\"mt-5 plan-schedule-description m-auto w-50 text-justify ps-2 mb-5\">Our stack behind the platform makes it effortless for all users involved to carry on with their communication without worrying about the nitty-gritty of it. We offer a range of built in tools to plan and keep track of the valued interactions taking place on the platform, as well as the option to continue them on third-party services outside the platform. Special nudges designed using behavioural architecture principles are blended into the interface assisting every student at each step to achieve his/her goals.</p>\r\n                   </div>\r\n                </div>\r\n                <div className=\"col-md-4 calendar-image-container p-0 \">\r\n                    <img src={calendar} className=\"calendar-image w-100 h-100 \"/>\r\n                </div>\r\n            </div>\r\n            {/* <PlanSchedule/> */}\r\n          <Footer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomepageContainer;","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\Footer\\Footer.tsx",[],"F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\Header\\Header.tsx",["106","107","108","109","110","111","112"],"import React, { FC, useState } from 'react';\r\nimport './Header.css';\r\nimport logo from '../../images/logo.png'\r\nimport { useHistory } from 'react-router';\r\nimport NavHome from '../NavHome/NavHome';\r\n// type Props={\r\n//   loggedIn:any,\r\n//   setLoggedIn:any\r\n// }\r\nconst Header :FC= () => {\r\nconst history=useHistory()\r\nlet token= localStorage.getItem('token')\r\nconst[loggedInUser,setLoggedInUser]=useState(true)\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n    <nav className=\"navbar navbar-expand-lg navbar-light \">\r\n  <div className=\"container-fluid \">\r\n  <img src={logo} className=\"logo\"/>\r\n    <button className=\"navbar-toggler \" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse ml-3\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav  ml-5 mb-2 mb-lg-0\">\r\n        \r\n       \r\n       \r\n       \r\n      </ul>\r\n      <div className=\"m-auto  d-flex\">\r\n      <li className=\"nav-item  btn-md me-3  btn-warning list-unstyled\">\r\n          <a className=\"nav-link text-dark\" aria-current=\"page\" href=\"#\">Organization</a>\r\n        </li>\r\n      <li className=\"nav-item dropdown  ml-2 btn-md mr-5 btn-primary list-unstyled \">\r\n          <a className=\"nav-link dropdown-toggle btn btn-primary\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Programs\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item \" href=\"#\">Browse by category</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">Browse by organizer </a></li>\r\n            {/* <li><hr className=\"dropdown-divider\"/></li> */}\r\n            <li><a className=\"dropdown-item\" href=\"#\">All programs</a></li>\r\n          </ul>\r\n        </li>\r\n      </div>\r\n    \r\n      <div className=\"d-flex \">\r\n      <li className=\"nav-item dropdown list-unstyled  me-2 \">\r\n          <a className=\"nav-link dropdown-toggle btn btn-primary\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Register\r\n          </a>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a className=\"dropdown-item text-center\" href=\"/organizer\">Organizer</a></li>\r\n            <li><a className=\"dropdown-item text-center\" href=\"/mentor\">Mentor </a></li>\r\n           \r\n            <li><a className=\"dropdown-item text-center\" href=\"/student\">Student</a></li>\r\n          </ul>\r\n        </li>\r\n        {\r\n          token  ?\r\n          <button className=\"btn btn-outline-danger me-2\" onClick={()=>{localStorage.clear();setLoggedInUser(!loggedInUser)}}  type=\"submit\">Log Out</button>\r\n           :\r\n          //  <button className=\"btn btn-outline-success me-2\" onClick={()=>{history.push('/login')}} type=\"submit\">Login</button>\r\n   ''\r\n        }\r\n        {\r\n          loggedInUser?\r\n          ''\r\n\r\n          :\r\n          <button className=\"btn btn-outline-success me-2\" onClick={()=>{history.push('/login')}} type=\"submit\">Login</button>\r\n        }\r\n       <button className=\"btn btn-outline-success me-2\" onClick={()=>{history.push('/login')}} type=\"submit\">Login</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n   <NavHome/>    \r\n   </>\r\n    );\r\n};\r\n\r\nexport default Header;","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\CreateProgram\\CreateProgram.tsx",["113","114","115"],"\r\nimport axios from 'axios';\r\nimport React, { FC,  useContext, useState } from 'react';\r\nimport Collapsible from 'react-collapsible';\r\nimport DatePicker from 'react-date-picker';\r\nimport { useHistory } from 'react-router';\r\nimport { Flip, toast, ToastContainer } from 'react-toastify';\r\nimport { UserContext } from '../../App';\r\nimport Header from '../Header/Header';\r\nimport  './CreateProgram.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ninterface createProgramInterface{\r\n  id:string;\r\ntitle:string;\r\ndescription:string;\r\n tentativeStartDate: string;\r\n durationInMonths: string;\r\n mode: string;\r\n languageRequirements:string;\r\n ageLimit:{\r\n  from:string;\r\n  to:string;\r\n };\r\n\r\n programLink:string;\r\n coordinator:{\r\n  name:string;\r\n  email:string;\r\n  phoneExtension:string;\r\n  phoneNumber:string;\r\n };\r\n \r\n studentFields:{\r\n  subjectRequirements: string;\r\n  openings: string;\r\n  applyBy: string\r\n  paid: boolean\r\n  programFees: string;\r\n  generalInstructions: string;\r\n };\r\n  \r\n\r\n   mentorFields: {\r\n    subjectRequirements: string;\r\n    openings: string;\r\n      applyBy: string;\r\n      generalInstructions: string;\r\n   }\r\n     \r\n}\r\ninterface AxiosRequestConfig3{\r\n  headers:any;\r\n  id:any;\r\n\r\n}\r\nconst CreateProgram:FC =()=> {\r\n  const[program,setProgram]=useState<createProgramInterface>({\r\n   id: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    tentativeStartDate: \"\",\r\n    durationInMonths: \"\",\r\n    mode: \"\",\r\n    languageRequirements: \"\",\r\n    ageLimit: {\r\n      from: \"\",\r\n      to: \"\"\r\n    },\r\n    programLink: \"\",\r\n    coordinator: {\r\n      name: \"\",\r\n      email: \"\",\r\n      phoneExtension: \"\",\r\n      phoneNumber: \"\"\r\n    },\r\n    studentFields: {\r\n      subjectRequirements: \"\",\r\n      openings: \"\",\r\n      applyBy: \"\",\r\n      paid: false,\r\n      programFees: \"\",\r\n      generalInstructions: \"\"\r\n    },\r\n    mentorFields: {\r\n      subjectRequirements: \"\",\r\n    openings: \"\",\r\n      applyBy: \"\",\r\n      generalInstructions: \"\"\r\n    }\r\n  })\r\n  const{id,setId,setGivenDate}=useContext(UserContext)\r\n  const [date, setDate] = useState<any>();\r\n  const[studentDate,setStudentDate]=useState<any>()\r\n  const[mentorDate,setMentorDate]=useState<any>()\r\nconst history=useHistory()\r\n  const[paidProgram,setPaidProgram]=useState<any>(false);\r\n  const[render,setRender]=useState(false);\r\n \r\n\r\nconst handleDate=(e:any)=>{\r\n\r\nsetGivenDate(e)\r\n  setDate(e)\r\n  \r\n  const month = (\"0\" + (e.getMonth() + 1)).slice(-2);\r\n  const day = (\"0\" + e.getDate()).slice(-2);\r\n  const result= [day,month,e.getFullYear()].join(\"/\");\r\n  program.tentativeStartDate=result\r\n   setProgram(program);\r\n   console.log(program);\r\n\r\n\r\n \r\n   \r\n}\r\n\r\nconst handleMentorDate=(e:any)=>{\r\n  setMentorDate(e)\r\n  \r\n  \r\n    \r\n    const month = (\"0\" + (e.getMonth() + 1)).slice(-2);\r\n    const day = (\"0\" + e.getDate()).slice(-2);\r\n    const result= [day,month,e.getFullYear()].join(\"/\");\r\n     \r\n    program.mentorFields.applyBy=result\r\n \r\n    setProgram(program)\r\n    console.log(program);\r\n    \r\n     console.log(result);\r\n     \r\n  \r\n   \r\n     \r\n  }\r\n  const handleStudentDate=(e:any)=>{\r\n    setStudentDate(e)\r\n    \r\n    \r\n      \r\n      const month = (\"0\" + (e.getMonth() + 1)).slice(-2);\r\n      const day = (\"0\" + e.getDate()).slice(-2);\r\n      const result= [day,month,e.getFullYear()].join(\"/\");\r\n    \r\n      program.studentFields.applyBy=result\r\n   \r\n      setProgram(program)\r\n      console.log(program);\r\n      console.log(result);\r\n        } \r\n\r\n      const handleIsPaid = ()=>{\r\nif(paidProgram){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.studentFields.paid =false\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\n   \r\n\r\nif(!paidProgram){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.studentFields.paid =true\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\n\r\n      }\r\n  const handleProgramBlur=(e:any)=>{\r\n\r\n\r\n\r\n    \r\n  if(e.target.name ==='title'){\r\n    const newProgramInfo={...program}\r\n    newProgramInfo.title=e.target.value\r\n    setProgram(newProgramInfo);\r\n    console.log(program);\r\n}\r\n\r\nif(e.target.name=== 'description'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.description=e.target.value\r\n  setProgram(newProgramInfo);\r\n  console.log(program);\r\n \r\n}\r\nif(e.target.name=== 'durationInMonths'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.durationInMonths=e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\n\r\nif(e.target.name==='mode'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.mode=e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\nif(e.target.name==='languageRequirements'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.languageRequirements=e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\nif(e.target.name==='from'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.ageLimit.from=e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\nif(e.target.name==='to'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.ageLimit.to=e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\nif(e.target.name === 'programLink'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.programLink=e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\n\r\nif(e.target.name === 'name'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.coordinator.name=e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\n\r\nif(e.target.name === 'email'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.coordinator.email=e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\nif(e.target.name === 'phoneExtension'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.coordinator.phoneExtension=e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\nif(e.target.name === 'phoneNumber'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.coordinator.phoneNumber=e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\nif(e.target.name === 'subjectRequirementsMentor'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.mentorFields.subjectRequirements=e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\nif(e.target.name === 'openingsMentor'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.mentorFields.openings=e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\n\r\nif(e.target.name === 'generalInstructionsMentor'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.mentorFields.generalInstructions =e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\nif(e.target.name === 'openingsStudent'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.studentFields.openings=e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\n\r\nif(e.target.name === 'subjectRequirementsStudent'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.studentFields.subjectRequirements =e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\n\r\n\r\n\r\nif(e.target.name === 'programFees'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.studentFields.programFees =e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\n\r\nif(e.target.name === 'generalInstructionsStudent'){\r\n  const newProgramInfo={...program}\r\n  newProgramInfo.studentFields.generalInstructions =e.target.value\r\n  setProgram(newProgramInfo)\r\n  console.log(program);\r\n}\r\nif(e.target.name === 'paid'){\r\n  \r\n  program.studentFields.paid =paidProgram\r\n  setProgram(program)\r\n  console.log(program);\r\n}\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n  const handleProgramSubmit=(f:any)=>{\r\n    axios.post<AxiosRequestConfig3>(' https://catalysed-iteration1.el.r.appspot.com/program',\r\n  \r\n    program,\r\n            {\r\n                headers:{'Content-Type': 'application/json'}\r\n            }\r\n      \r\n      )\r\n      .then((res)=>{\r\n       \r\n          toastRender();\r\n \r\n          console.log('res',res);\r\n          console.log('id',res.data.id);\r\n          setId(res.data.id)\r\n          localStorage.setItem('id',res.data.id)\r\n        setTimeout(()=>{\r\n          history.push('/programDetail')\r\n\r\n        },4000)\r\n\r\n      }\r\n\r\n\r\n   \r\n          \r\n          \r\n      \r\n  )\r\n .catch(err=> {\r\n   console.log(err);\r\n toastRenderError();\r\n }\r\n      )\r\n    \r\n     \r\nf.preventDefault()\r\n  }\r\n\r\n  const toastRender =() =>{\r\n    toast.success('😊 Your program has been created successfully!', {\r\n      position: \"top-center\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      \r\n      });\r\n\r\n      }\r\n      const toastRenderError =() =>{\r\n        toast.error('😥  Sorry,your program has not been created successfully...Please check again.', {\r\n          position: \"top-center\",\r\n          autoClose: 3000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        })\r\n\r\n      }\r\n    return (\r\n      <>\r\n      \r\n      \r\n        <Header  />\r\n       \r\n          <h1 className=\"text-center\"><u>Create Program</u></h1>\r\n         <form onSubmit={handleProgramSubmit}>\r\n        <div className=\"row \">\r\n           <div className=\"col-md-7 d-flex justify-content-center ms-2 me-2\">\r\n\r\n             <div className=\"text-center ml-2\">\r\n\r\n       <div className=\" d-flex justify-content-start\">\r\n           <div className=\"w-100 \">\r\n \r\n    <p className=\" text-start m-0\"> <label >Title</label></p>\r\n  <input type=\"text\" className=\"form-control w-100 \" onBlur={handleProgramBlur} onChange={handleProgramBlur} id=\"formGroupExampleInput\" placeholder=\"Title\" name=\"title\" required/>\r\n           </div>\r\n\r\n  \r\n      </div>\r\n\r\n       <div className=\"d-flex justify-content-start mt-3\">\r\n        <div className=\"w-100\">\r\n    <p className=\" text-start m-0\"> <label >Description</label></p>\r\n    <textarea className=\"form-control w-100\" rows={5} name=\"description\" onChange={handleProgramBlur}\r\n     onBlur={handleProgramBlur}placeholder=\"Description *\"  required/>\r\n       </div>\r\n\r\n       </div>\r\n       <div className=\"d-flex mt-3\">\r\n         \r\n       \r\n\r\n <div className=\"d-flex justify-content-start\">\r\n <div className=\" tentative-date-container me-4\">\r\n \r\n <p className=\" text-start m-0 \"> <label >Tentative Start Date:</label></p>\r\n <div className=\"react-date-picker rounded  mt-1  \">\r\n  \r\n  <DatePicker clearIcon={null}  className=\"\"  value={date} name=\"tentativeStartDate\" \r\n   onChange={handleDate}  format=\"dd-MM-y\" dayPlaceholder=\"day\" monthPlaceholder=\"month\"\r\n    yearPlaceholder=\"year\" required={true}/> \r\n \r\n </div>\r\n \r\n        </div>\r\n        <div className=\" w-25 duration-container \">\r\n          \r\n <p className=\" text-start mb-1\"> <label >Duration:</label></p>\r\n <div className=\"d-flex m-0\">\r\n <input type=\"number\" className=\" form-control  duration-in-months-input\"  name=\"durationInMonths\" min=\"0\" onChange={handleProgramBlur}\r\n onBlur={handleProgramBlur} required/>&nbsp;\r\n          <label className=\"mt-1 ml-1\">month</label>\r\n </div>\r\n         \r\n        </div>\r\n   </div>\r\n  \r\n        \r\n\r\n  \r\n     \r\n       </div>\r\n       <div className=\"d-flex justify-content-start \">\r\n         <div className=\"d-flex justify-content-between\">\r\n         <div className=\"me-3\">\r\n         <p className=\" text-start m-0\"> <label >Virtual</label></p>\r\n       <input type=\"radio\" id=\"male\" className=\"form-check-input\" name=\"mode\" value=\"Virtual\" \r\n        onClick={handleProgramBlur} onBlur={handleProgramBlur} required/>\r\n         </div>\r\n         <div className=\"\">\r\n         <p className=\" text-start m-0 in-person \"> <label >In person</label></p>\r\n       <input type=\"radio\" id=\"male\" name=\"mode\" className=\"form-check-input\" value=\"In Person\"   onClick={handleProgramBlur} onBlur={handleProgramBlur} required/>\r\n      </div>\r\n         </div>\r\n         \r\n     \r\n       \r\n \r\n       </div>\r\n       <div className=\" d-flex justify-content-start mt-2\">\r\n           <div className=\" \">\r\n \r\n    <p className=\" text-start m-0\"> <label >Language requirements</label>\r\n    <i className=\"fas fa-info-circle ms-2\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Language requirements\"></i>\r\n</p>\r\n  <input type=\"text\" className=\"form-control\" id=\"formGroupExampleInput\" name=\"languageRequirements\"\r\n   onChange={handleProgramBlur} onBlur={handleProgramBlur} placeholder=\"Language requirements\" required/>\r\n           </div>\r\n\r\n  \r\n   </div>\r\n  <div className=\"mt-3 d-flex\">\r\n    <div className=\"d-flex\">\r\n    <p className=\"text-center  mt-4\"> <label >Age Limit </label></p>\r\n    <span  className=\"ms-2 mt-4\">:</span>\r\n    </div>\r\n \r\n    <div className=\"d-flex ms-2 w-50  my-auto \">\r\n      <div className=\"mb-2\" >\r\n        <div className=\"\">\r\n        <p className=\" text-center m-0 me-2\">From</p>\r\n        </div>\r\n        <div className=\"\">\r\n        <input type=\"number\" name=\"from\" className=\" age-limit-1  w-75  form-control\" id=\"formGroupExampleInput\" min=\"0\" placeholder=\"\" onChange={handleProgramBlur} onClick={handleProgramBlur} required/>\r\n        </div>\r\n    \r\n      </div>\r\n   <span className=\"me-3 mt-4\">-</span> \r\n    <div className=\"\">\r\n      <div>\r\n      <p className=\"me-2 m-0\">To</p>\r\n      </div>\r\n      <div>\r\n      <input type=\"number\" name=\"to\" className=\" age-limit-2 w-75 form-control \" id=\"formGroupExampleInput\" placeholder=\"\" onChange={handleProgramBlur} onClick={handleProgramBlur} min=\"0\" required/>\r\n      </div>\r\n  \r\n    \r\n    </div>\r\n     </div>\r\n    </div>\r\n\r\n\r\n   </div>\r\n </div>\r\n  <div className=\"col-md-5 bg-light m-auto d-flex justify-content-center  card card-create-program  mt-1\">\r\n  \r\n   <div className=\"card-body d-flex justify-content-center align-items-center\">\r\n     <div>\r\n\r\n   <div className=\" d-flex justify-content-center pt-2 \">\r\n    <div className=\"w-100 \">\r\n\r\n    <p className=\" text-start m-0\"> <label >Program Link</label></p>\r\n    <input type=\"url\" className=\"form-control w-100\" name=\"programLink\" id=\"formGroupExampleInput\" placeholder=\"Program link\" onChange={handleProgramBlur} onClick={handleProgramBlur} required/>\r\n    </div>\r\n   </div>\r\n   \r\n\r\n   <h5 className=\"mt-4\">Co-ordinator details</h5>\r\n\r\n   <div className=\" d-flex justify-content-center\">\r\n    <div className=\" w-100\">\r\n\r\n    <p className=\" text-start m-0\"> <label >Name</label></p>\r\n    <input type=\"text\"  onChange={handleProgramBlur} onClick={handleProgramBlur} className=\"form-control w-100\" name=\"name\" id=\"formGroupExampleInput\" placeholder=\"Name\" required/>\r\n    </div>\r\n   </div>\r\n\r\n   <div className=\" d-flex mt-2 justify-content-center\">\r\n    <div className=\"w-100 \">\r\n\r\n    <p className=\" text-start m-0\"> <label >Email</label></p>\r\n    <input type=\"email\"  onChange={handleProgramBlur} onClick={handleProgramBlur} className=\"form-control  w-100\" name=\"email\"id=\"formGroupExampleInput\" placeholder=\"Email\" required/>\r\n    </div>\r\n   </div>\r\n   <div className=\" d-flex justify-content-center mt-2 pb-3\">\r\n    <div className=\"phone-container \">\r\n\r\n    <p className=\" text-start m-0\"> <label htmlFor=\"phone\">Phone</label></p>\r\n    <div className=\"d-flex \">\r\n    <input type=\"text\" className=\" phone-1st w-25 form-control \" onChange={handleProgramBlur} \r\n    onClick={handleProgramBlur} name=\"phoneExtension\"id=\"phone\" placeholder=\"\" required/><span className=\"mt-1\">-</span>\r\n    <input type=\"text\" className=\"form-control w-75\" id=\"phone\"  name=\"phoneNumber\" placeholder=\"\"  onChange={handleProgramBlur} onClick={handleProgramBlur} required/>\r\n    </div>\r\n   \r\n    </div>\r\n   </div>\r\n   </div>\r\n</div>\r\n\r\n</div>\r\n\r\n        </div>\r\n        \r\n  \r\n    <div className=\"ms-5\">\r\n            \r\n             <Collapsible className=\"container w-auto  collapsible-student-field bg-light mt-2 pb-2 w-100 h-auto collapsible\" open={true}overflowWhenOpen=\"visible\" openedClassName=\"container  collapsible-student-field   collapsible bg-light pb-2  mt-2 \" triggerTagName=\"div\"triggerWhenOpen={<p className=\"text-start mt-3\"> <b>^ </b>Mentor Fields &nbsp;<span className=\"bg-secondary text-white\"><i className=\"fas fa-info-circle\"></i>(This field is only visible for mentors)</span></p>} trigger={<p className=\"text-start mt-3 \"> <b className=\"sign-left\">&gt;</b> Mentor Fields &nbsp;<span className=\"bg-secondary text-white \"><i className=\"fas fa-info-circle\"></i>(This field is only visible for mentors)</span></p>} \r\n             >\r\n           {/* <div className=\" d-flex justify-content-center\">\r\n    <div className=\" \">\r\n\r\n    <p className=\" text-start m-0\"> <label >Skills/Subject requirements</label></p>\r\n    <input type=\"text\" className=\"w-100 form-control\" id=\"formGroupExampleInput\" placeholder=\"Skills\" required/>\r\n    </div>\r\n   </div>\r\n   <div className=\"d-flex justify-content-center\">\r\n   <div className=\" w-25\">\r\n             \r\n             <p className=\" text-center \"> <label >Number of openings:</label></p>\r\n                      <input type=\"number\" className=\"w-25 form-control\"  min=\"0\"required/>\r\n                   \r\n                    </div>    \r\n                    <div className=\"  \">\r\n \r\n    <p className=\" text-start m-0\"> <label >Application End Date:</label></p>\r\n    <DatePicker clearIcon={null} value={mentorDate} className=\"\" onChange={setMentorDate} format=\"dd-MM-y\"dayPlaceholder=\"day\" monthPlaceholder=\"month\"  yearPlaceholder=\"year\" required={true}/>\r\n           </div> \r\n   </div>\r\n             \r\n             \r\n           \r\n            <div className=\"d-flex justify-content-start\">\r\n              <div className=\"w-100 text-start\">\r\n              <p className=\"\">Instructions </p>\r\n             <textarea name=\"\" className=\"w-75 form-control\" id=\"\" cols={3} rows={3}  placeholder=\"Instructions*\"/>\r\n              </div>\r\n           \r\n            </div> */}\r\n<div className=\"bg-white p-2\">\r\n<div className=\" d-flex justify-content-start\">\r\n    <div className=\" \">\r\n\r\n    <p className=\" text-start m-0\"> <label >Skills/Subject requirements</label></p>\r\n    <input type=\"text\" name=\"subjectRequirementsMentor\" onChange={handleProgramBlur} onClick={handleProgramBlur} className=\"w-100 form-control\" id=\"formGroupExampleInput\" placeholder=\"Skills\" required/>\r\n    </div>\r\n   </div>\r\n   <div className=\"d-flex justify-content-start mt-3\">\r\n   <div className=\" w-25  \">\r\n             \r\n             <p className=\" text-start m-0\"> <label >Number of openings:</label></p>\r\n                      <input type=\"number\" name=\"openingsMentor\"  onChange={handleProgramBlur} onClick={handleProgramBlur} className=\"w-25  form-control number-of-openings-input\"  min=\"0\"required/>\r\n                   \r\n                    </div>    \r\n                    <div className=\"  \">\r\n \r\n    <p className=\" text-start m-0\"> <label >Application End Date:</label></p>\r\n    <DatePicker clearIcon={null} value={mentorDate} className=\"\" onChange={handleMentorDate}  name=\"applyByMentor\" format=\"dd-MM-y\"dayPlaceholder=\"day\" monthPlaceholder=\"month\"  yearPlaceholder=\"year\" required={true}/>\r\n           </div> \r\n   </div>\r\n             \r\n             \r\n           \r\n            <div className=\"d-flex  justify-content-start\">\r\n              <div className=\"w-100 text-start\">\r\n              <p className=\"m-0\">Instructions </p>\r\n             <textarea name=\"generalInstructionsMentor\" onChange={handleProgramBlur} onClick={handleProgramBlur} className=\"w-100 form-control\" id=\"\" cols={3} rows={3}  placeholder=\"Instructions*\" required/>\r\n              </div>\r\n           \r\n            </div>\r\n            </div>\r\n    </Collapsible>\r\n\r\n    </div>\r\n    <div className=\"ms-5\">\r\n    <Collapsible className=\"container collapsible-student-field bg-light mt-2  collapsible\" open={true}overflowWhenOpen=\"visible\" openedClassName=\"container  collapsible-student-field  collapsible bg-light  pb-2 mt-2 \" triggerTagName=\"div\"triggerWhenOpen={<p className=\"text-start mt-3\"> <b>^ </b>Student Fields &nbsp;<span className=\"bg-secondary text-white\"><i className=\"fas fa-info-circle\"></i>(This field is only visible for students)</span></p>} trigger={<p className=\"text-start mt-3 \"> <b className=\"sign-left\">&gt;</b> Student Fields &nbsp;<span className=\"bg-secondary text-white \"><i className=\"fas fa-info-circle\"></i>(This field is only visible for students)</span></p>} \r\n             >\r\n              <div className=\"bg-white p-2\">\r\n      <div className=\" d-flex justify-content-start \">\r\n        <div className=\" \">\r\n\r\n     <p className=\" text-start m-0\"> <label >Skills/Subject requirements</label></p>\r\n    <input type=\"text\" className=\"w-100 form-control \"onChange={handleProgramBlur} onClick={handleProgramBlur}  name=\"subjectRequirementsStudent\" id=\"formGroupExampleInput\" placeholder=\"Skills\" required/>\r\n    </div>\r\n   </div>\r\n   <div className=\"d-flex justify-content-start mt-2\">\r\n   <div className=\" w-25\">\r\n             \r\n             <p className=\" text-start m-0\"> <label >Number of openings:</label></p>\r\n                      <input type=\"number\"onChange={handleProgramBlur} onClick={handleProgramBlur}  className=\"w-25 form-control number-of-openings-input\" name=\"openingsStudent\" min=\"0\" required/>\r\n                   \r\n                    </div>    \r\n                    <div className=\"  \">\r\n \r\n    <p className=\" text-start m-0\"> <label >Application End Date:</label></p>\r\n    <DatePicker clearIcon={null} value={studentDate}  onChange={handleStudentDate}  format=\"dd-MM-y\"dayPlaceholder=\"day\" monthPlaceholder=\"month\"  yearPlaceholder=\"year\" name=\"applyByStudent\" required={true}/>\r\n           </div> \r\n   </div>\r\n             <div className=\"d-flex\">\r\n             <div className=\"d-flex\">\r\n               <input type=\"checkbox\" checked={paidProgram} name=\"paid\" value={paidProgram} onClick={handleIsPaid} onChange={()=>setPaidProgram(!paidProgram) } className=\"mt-1 form-check-input\" />\r\n               <p className=\"ms-1\">Is paid program?</p>\r\n             </div> &nbsp;&nbsp;\r\n            \r\n               {\r\n                 paidProgram ? \r\n                 <div className=\"w-25 \">\r\n                 <p className=\"text-start m-0\">Program fees</p>\r\n                 <div className=\"d-flex text-start\">\r\n                \r\n                 <input type=\"number\" name=\"programFees\"onChange={handleProgramBlur} onClick={handleProgramBlur}  className=\" form-control-md paid-program-input form-control\" min=\"0\" required/> &nbsp;\r\n                     <label>₹</label>\r\n                 </div>\r\n                  </div>\r\n                 : \r\n                 ''\r\n\r\n               }\r\n          \r\n              \r\n            \r\n             </div>\r\n             \r\n           \r\n            <div className=\"d-flex justify-content-start mt-3\">\r\n              <div className=\"w-100 text-start\">\r\n              <p className=\"m-0\">General Instructions </p>\r\n             <textarea  className=\"form-control \" id=\"\" onChange={handleProgramBlur} onClick={handleProgramBlur}  name=\"generalInstructionsStudent\" cols={3} rows={3}  placeholder=\"General Instructions*\"required/>\r\n              </div>\r\n           \r\n            </div>\r\n            </div>\r\n\r\n               </Collapsible>\r\n</div>\r\n               {/* <div className=\"accordion container  mt-3 mb-3\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header d-flex justify-content-center \" id=\"headingOne\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n      <button className=\"accordion-button bg-light collapsed\"  data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" >\r\n        Mentor fields&nbsp;&nbsp;\r\n        <div className=\"bg-secondary text-white ml-5\"><i className=\"fas fa-info-circle\"></i>(This field is only visible for mentors)</div>\r\n      </button>\r\n   \r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n      <div className=\" d-flex justify-content-start\">\r\n    <div className=\" \">\r\n\r\n    <p className=\" text-start m-0\"> <label >Skills/Subject requirements</label></p>\r\n    <input type=\"text\" className=\"w-100 form-control\" id=\"formGroupExampleInput\" placeholder=\"Skills\" required/>\r\n    </div>\r\n   </div>\r\n   <div className=\"d-flex justify-content-start\">\r\n   <div className=\" w-25  \">\r\n             \r\n             <p className=\" text-start m-0\"> <label >Number of openings:</label></p>\r\n                      <input type=\"number\" className=\"w-25 form-control\"  min=\"0\"required/>\r\n                   \r\n                    </div>    \r\n                    <div className=\"  \">\r\n \r\n    <p className=\" text-start m-0\"> <label >Application End Date:</label></p>\r\n    <DatePicker clearIcon={null} value={mentorDate} className=\"\" onChange={setMentorDate} format=\"dd-MM-y\"dayPlaceholder=\"day\" monthPlaceholder=\"month\"  yearPlaceholder=\"year\" required={true}/>\r\n           </div> \r\n   </div>\r\n             \r\n             \r\n           \r\n            <div className=\"d-flex justify-content-start\">\r\n              <div className=\"w-100 text-start\">\r\n              <p className=\"m-0\">Instructions </p>\r\n             <textarea name=\"\" className=\"w-100 form-control\" id=\"\" cols={3} rows={3}  placeholder=\"Instructions*\" required/>\r\n              </div>\r\n           \r\n            </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    </div> */}\r\n\r\n    {/* <div className=\" accordion  container mb-3\" id=\"accordionExample2\">\r\n      <div className=\"accordion-item\">\r\n       <h2 className=\"accordion-header d-flex justify-content-center \" id=\"heading\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\r\n        <button className=\"accordion-button bg-light collapsed\"  data-bs-toggle=\"collapse\"  data-bs-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\r\n        Students fields &nbsp; \r\n          <div className=\"bg-secondary text-white ml-5\"><i className=\"fas fa-info-circle\"></i>(This field is only visible for students)</div>\r\n      </button>\r\n   \r\n     </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse show\"       aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample2\">\r\n      <div className=\"accordion-body\">\r\n    \r\n       <div>\r\n      <div className=\" d-flex justify-content-start\">\r\n        <div className=\" \">\r\n\r\n     <p className=\" text-start m-0\"> <label >Skills/Subject requirements</label></p>\r\n    <input type=\"text\" className=\"w-100 form-control \" id=\"formGroupExampleInput\" placeholder=\"Skills\" required/>\r\n    </div>\r\n   </div>\r\n   <div className=\"d-flex justify-content-start\">\r\n   <div className=\" w-25\">\r\n             \r\n             <p className=\" text-start m-0\"> <label >Number of openings:</label></p>\r\n                      <input type=\"number\" className=\"w-25 form-control\"  min=\"0\" required/>\r\n                   \r\n                    </div>    \r\n                    <div className=\"  \">\r\n \r\n    <p className=\" text-start m-0\"> <label >Application End Date:</label></p>\r\n    <DatePicker clearIcon={null} value={studentDate} onChange={setStudentDate} format=\"dd-MM-y\"dayPlaceholder=\"day\" monthPlaceholder=\"month\"  yearPlaceholder=\"year\" required={true}/>\r\n           </div> \r\n   </div>\r\n             <div className=\"d-flex\">\r\n             <div className=\"d-flex\">\r\n               <input type=\"checkbox\" checked={paidProgram} onChange={()=>setPaidProgram(!paidProgram)} className=\"mt-1 form-check-input\" required/>\r\n               <p>Is paid program?</p>\r\n             </div> &nbsp;&nbsp;\r\n            \r\n               {\r\n                 paidProgram ? \r\n                 <div className=\"w-25 \">\r\n                 <p className=\"text-start m-0\">Program fees</p>\r\n                 <div className=\"d-flex text-start\">\r\n                \r\n                 <input type=\"number\" className=\" form-control-md paid-program-input form-control\" min=\"0\" required/> &nbsp;\r\n                     <label>₹</label>\r\n                 </div>\r\n                  </div>\r\n                 : \r\n                 ''\r\n\r\n               }\r\n          \r\n              \r\n            \r\n             </div>\r\n             \r\n           \r\n            <div className=\"d-flex justify-content-start\">\r\n              <div className=\"w-100 text-start\">\r\n              <p className=\"m-0\">General Instructions </p>\r\n             <textarea name=\"\" className=\"form-control mb-2\" id=\"\" cols={3} rows={3}  placeholder=\"General Instructions*\"required/>\r\n              </div>\r\n           \r\n            </div>\r\n            </div>\r\n             \r\n             \r\n           \r\n    \r\n      </div>\r\n    </div>\r\n    </div>\r\n    </div> */}\r\n    <input type=\"submit\" className=\"btn btn-success w-100 container mt-2 mb-2 ms-5\"  value=\"Send Program\"/>\r\n   <ToastContainer\r\n    transition={Flip}\r\n   />\r\n    </form>\r\n   \r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreateProgram;","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\Login\\Login.tsx",["116","117"],"import React, { FC, useContext, useState } from 'react';\r\nimport './Login.css';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router';\r\nimport { UserContext } from '../../App';\r\ninterface AxiosRequestConfig {\r\n    email:any;\r\n    password:any;\r\n    headers:any;\r\n    jwt:any;\r\n    setItem:any;  \r\n  }\r\n\r\nconst Login :FC= () => {\r\n\r\n    \r\n   const history=useHistory()\r\n  const[userInfo,setUserInfo]=useState(\r\n    {\r\n        email:'',\r\n         password:''\r\n     }\r\n  )\r\n\r\n\r\n  \r\n    const handleBlur=(e:any)=>{\r\n        if(e.target.name==='email'){\r\n        const newUserInfo={...userInfo}\r\n        newUserInfo.email=e.target.value\r\n        setUserInfo(newUserInfo)\r\n        }\r\n        if(e.target.name==='password'){\r\n            const newUserInfo={...userInfo}\r\n            newUserInfo.password=e.target.value\r\n            setUserInfo(newUserInfo)\r\n        \r\n        }\r\n    }\r\n  \r\nconst click=(r:any)=>{\r\n    axios.post<AxiosRequestConfig>('https://catalysed-iteration1.el.r.appspot.com/authenticate',\r\n  \r\n  userInfo,\r\n          {\r\n              headers:{'Content-Type': 'application/json'}\r\n          }\r\n    \r\n    \r\n           \r\n    \r\n    )\r\n    .then((res)=>{\r\n        \r\n        console.log(res)\r\n        if(res.status=== 200){\r\n            localStorage.setItem('token',`${res.data.jwt}`)\r\n            history.push('/welcome')\r\n        \r\n           \r\n        }\r\n    \r\n       \r\n\r\n\r\n        }   \r\n    )\r\n    \r\n    .catch(err=>{\r\n        alert('Check your Email and Password again....')\r\n        localStorage.clear()\r\n    }\r\n       \r\n       \r\n         \r\n         )\r\n        \r\n   r.preventDefault()\r\n}\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"d-flex login-mother-container\">\r\n           <div className=\"login-form-container my-auto  container-fluid bg-white\">\r\n               <h2 className=\"text-center\">Login to your account</h2>\r\n             <form onSubmit={click}>\r\n                   <div className=\"w-100\">\r\n                   <label className=\"d-flex justify-content-start\">\r\n                    Email\r\n                 </label>\r\n          <input type=\"email\" name=\"email\" className=\"form-control form-control-sm \"\r\n            placeholder=\"Type your email\"  onBlur={handleBlur} required/> \r\n                   </div>\r\n      <br/> \r\n      <div>\r\n     <label className=\"d-flex justify-content-start\">\r\n     Password\r\n     </label>\r\n    <input type=\"password\" name=\"password\" onBlur={handleBlur} className=\"form-control form-control-sm\" placeholder=\"Type your password\" required/>\r\n    </div>\r\n    <input type=\"submit\"  className=\"btn btn-success btn-sm mt-5 w-100\" value=\"Login\"/>\r\n  </form>\r\n           </div>\r\n        </div>\r\n{/*        \r\n        <input type=\"button\" value=\"Submit\" onClick={()=>click()}/> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\Welcome\\Welcome.tsx",[],"F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\ProgramDetail\\ProgramDetail.tsx",["118"],"import { Button } from '@material-ui/core';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './ProgramDetail.css'\r\nimport { UserContext } from '../../App';\r\nimport Collapsible from 'react-collapsible';\r\nimport axios from 'axios';\r\n\r\nconst ProgramDetail = () => {\r\n\r\n\r\n  const {id}=  useContext(UserContext)\r\n\r\nconst[programDetails,setProgramDetails]=useState<any>()\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n  axios.get<any>(`https://catalysed-iteration1.el.r.appspot.com/program/${localStorage.getItem('id')}`)\r\n  .then((res)=>{\r\nconsole.log(res.data.id);\r\n  setProgramDetails(res.data);\r\n\r\n\r\n  })\r\n},[])\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container-fluid\">\r\n                <h1>{programDetails?.title} </h1>\r\n    \r\n           \r\n\r\n            <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n  <li className=\"nav-item\" role=\"presentation\">\r\n    <button className=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#home\" type=\"button\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Program Details</button>\r\n  </li>\r\n  <li className=\"nav-item\" role=\"presentation\">\r\n    <button className=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#profile\" type=\"button\" role=\"tab\" aria-controls=\"profile\" aria-selected=\"false\">Invitations</button>\r\n  </li>\r\n  <li className=\"nav-item\" role=\"presentation\">\r\n    <button className=\"nav-link\" id=\"contact-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#contact\" type=\"button\" role=\"tab\" aria-controls=\"contact\" aria-selected=\"false\">Participants</button>\r\n  </li>\r\n</ul>\r\n<div className=\"tab-content \" id=\"myTabContent\">\r\n  <div className=\"tab-pane fade show active  border border-dark pt-1 pb-3 text-break\" id=\"home\" role=\"tabpanel\" aria-labelledby=\"home-tab\">\r\n  <Link style={{textDecoration:'none'}} to={`/editProgram/${localStorage.getItem('id')}`}>\r\n\r\n<Button variant=\"contained\" color=\"primary\">Edit</Button>\r\n</Link>\r\n\r\n<Button variant=\"contained\" className=\"ms-2\" color=\"secondary\">Publish</Button>\r\n\r\n<i className=\"fas fa-info-circle ms-2\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Publish the program, few fields will not be editable after publish\"></i>\r\n\r\n<div className =\"d-flex justify-content-start w-auto \">\r\n<div className=\"ms-2\">\r\n    <div className=\"row\">\r\n    <div className=\"col-md-7 \">\r\n    <div className=\"d-flex \">\r\n\r\n<h5 className=\"\">Title:</h5>\r\n<p className=\"  ms-1 text-secondary\"><b>{programDetails?.title}</b></p>\r\n</div>\r\n\r\n\r\n<p className=\"text-secondary  text-start mt-1\"><h5 className=\"d-inline text-dark\">Description:</h5>\r\n{programDetails?.description}\r\n</p> \r\n\r\n\r\n<div className=\"d-flex row\">\r\n<div className=\"d-flex col-md-6 \">\r\n<h5 className=\"\"><span className=\"d-flex\">Tentative Start  :</span> Date</h5>\r\n<p className=\"text-secondary\">{programDetails?.tentativeStartDate}</p>\r\n</div> \r\n\r\n<div className=\"d-flex col-md-6 \">\r\n<h5> &nbsp; Duration :</h5>\r\n<p className=\"mt-1 text-secondary\">  &nbsp;{programDetails?.durationInMonths} months</p>\r\n</div>\r\n</div>  \r\n\r\n<div className=\"d-flex row\">\r\n<div className=\"col-md-6\">\r\n<div className=\"d-flex \">\r\n<h5 className=\"\">Mode :</h5>\r\n<p className=\"text-secondary\">{programDetails?.mode}</p>\r\n</div>\r\n</div>\r\n\r\n<div className=\"d-flex col-md-6\">\r\n<h5 className=\"\"><span className= \"d-flex\">Language   :</span> Requirements</h5>\r\n<p className=\"text-secondary ms-2\">{programDetails?.languageRequirements}</p>\r\n</div>\r\n</div> \r\n\r\n<div className=\"d-flex \">\r\n<h5 className=\"\">Age<span className= \"\">:</span>  <br/>Limit</h5>\r\n\r\n<p className=\"text-secondary ms-2\">{programDetails?.ageLimit?.from} <span className=\"text-dark\">to</span>  {programDetails?.ageLimit?.to}</p>\r\n</div>\r\n    </div>\r\n    <div className=\"col-md-5 container\">\r\n      <div className=\"card program-detail-card ms-4 w-auto bg-light\">\r\n        <div className=\"card-body\">\r\n         \r\n          <div className=\"d-flex \">\r\n            <p className=\"d-flex\">\r\n            <h5>Program Link </h5>\r\n            <h5>:</h5>\r\n            </p>\r\n            <h6 className=\"mt-1 ms-1\" ><u>{programDetails?.programLink}</u></h6>\r\n          </div>\r\n     <div className=\"d-flex justify-content-center\">\r\n     <div className=\"mt-5\">\r\n          <h3 className=' mb-5 text-center'>\r\n            Co-ordinator details\r\n          </h3>\r\n         \r\n          <div className=\"d-flex ms-5 text-center\">\r\n            <h5>Name:</h5>\r\n            <h6 className=\"mt-1 ms-1\">{programDetails?.coordinator?.name}</h6>\r\n          </div>\r\n          <div className=\"d-flex ms-5\">\r\n            <h5>Email:</h5>\r\n            <h6 className=\"mt-1 ms-1\">{programDetails?.coordinator?.email}</h6>\r\n          </div>\r\n          <div className=\"d-flex ms-5\">\r\n            <h5>Phone:</h5>\r\n            <h6 className=\"mt-1 ms-1\">{programDetails?.coordinator?.phoneExtension} {programDetails?.coordinator?.phoneNumber}</h6>\r\n          </div>\r\n          </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n<div className=\"d-flex justify-content-start w-100\">\r\n  <div>\r\n<Collapsible className=\"container w-auto  program-detail-collapsible-mentor-field bg-light mt-2 pb-2 w-100 h-auto collapsible\" open={true}overflowWhenOpen=\"visible\" openedClassName=\"container  program-detail-collapsible-mentor-field   collapsible bg-light pb-2  mt-2 \" triggerTagName=\"div\"triggerWhenOpen={<p className=\"text-start mt-3\"> <b>^ </b>Mentor Fields &nbsp;<span className=\"bg-secondary text-white\"><i className=\"fas fa-info-circle\"></i>(This field is only visible for mentors)</span></p>} trigger={<p className=\"text-start mt-3 \"> <b className=\"sign-left\">&gt;</b> Mentor Fields &nbsp;<span className=\"bg-secondary text-white \"><i className=\"fas fa-info-circle\"></i>(This field is only visible for mentors)</span></p>} \r\n       >\r\n    \r\n<div className=\"bg-white p-2\">\r\n<div className=\" d-flex justify-content-start\">\r\n<div className=\"d-flex \">\r\n\r\n<h6 className=\"text-start\"> Skills/Subject requirements:</h6>\r\n<p className=\" text-start me-2\">{programDetails?.mentorFields?.subjectRequirements}</p>\r\n</div>\r\n</div>\r\n<div className=\"d-flex justify-content-start mt-3\">\r\n<div>\r\n<div className=\" d-flex  \">\r\n       \r\n<h6 className=\" text-start m-0\"> <label >Number of openings:</label></h6>\r\n <p className=\"ms-1\"> {programDetails?.mentorFields?.openings} </p>      \r\n        \r\n      </div>    \r\n<div className=\"d-flex\">\r\n\r\n<h6 className=\"text-start\">\r\n<label >Application End Date:</label>\r\n</h6>\r\n<p className=\"ms-1\">\r\n{programDetails?.mentorFields?.applyBy}\r\n</p>\r\n   </div> \r\n     </div>\r\n</div>\r\n       \r\n       \r\n     \r\n      <div className=\"d-flex  justify-content-start \">\r\n        <div className=\"w-100 text-start d-flex flex-column\">\r\n        <h6 className=\"\"><span>Instructions</span>\r\n        <span>:</span>\r\n         </h6>\r\n      <p className=\" text-start program-detail-mentor-generalInstructions\">{programDetails?.mentorFields?.generalInstructions}</p>\r\n        </div>\r\n     \r\n      </div>\r\n      </div>\r\n  </Collapsible>\r\n</div>\r\n</div>\r\n<div className=\"d-flex justify-content-start\">\r\n  <div>\r\n  <Collapsible className=\"container collapsible-student-field bg-light mt-2  collapsible\" open={true}overflowWhenOpen=\"visible\" openedClassName=\"container  collapsible-student-field  collapsible bg-light  pb-2 mt-2 \" triggerTagName=\"div\"triggerWhenOpen={<p className=\"text-start mt-3\"> <b>^ </b>Student Fields &nbsp;<span className=\"bg-secondary text-white\"><i className=\"fas fa-info-circle\"></i>(This field is only visible for students)</span></p>} trigger={<p className=\"text-start mt-3 \"> <b className=\"sign-left\">&gt;</b> Student Fields &nbsp;<span className=\"bg-secondary text-white \"><i className=\"fas fa-info-circle\"></i>(This field is only visible for students)</span></p>} \r\n       >\r\n        <div className=\"bg-white p-2\">\r\n<div className=\" d-flex justify-content-start \">\r\n  <div className=\"d-flex \">\r\n\r\n<h6 className=\" text-start \"> Skills/Subject requirements :</h6>\r\n<p className=\"text-start me-2\">{programDetails?.studentFields?.subjectRequirements}</p>\r\n</div>\r\n</div>\r\n<div className=\"  mt-2\">\r\n<div className=\" d-flex\">\r\n       \r\n       <h6 className=\" text-start m-0\"> <label >Number of openings:</label></h6>\r\n       <p className=\"ms-1\">{programDetails?.studentFields?.openings}</p>\r\n             \r\n              </div>    \r\n              <div className=\" d-flex \">\r\n\r\n<h6 className=\" text-start m-0\"> <label >Application End Date:</label></h6>\r\n<p>{programDetails?.studentFields?.applyBy}</p>\r\n     </div> \r\n</div>\r\n{\r\n  programDetails?.studentFields?.paid?\r\n  <div>\r\n  <div className=\"d-flex\">\r\n   <h6>Paid Program:</h6>\r\n    <p>Yes</p>\r\n  </div>\r\n\r\n\r\n <div className=\"d-flex \">\r\n  <h6 className=\"text-start m-0\">Program fees :</h6>\r\n  <div className=\"d-flex text-start\">\r\n \r\n <p>6</p> &nbsp;\r\n      <b>₹</b>\r\n  </div>\r\n   </div>\r\n</div>\r\n  :\r\n  <div className=\"d-flex\">\r\n   <h6>Paid Program:</h6>\r\n    <p>No</p>\r\n  </div>\r\n}\r\n    \r\n\r\n         \r\n \r\n<div className=\"d-flex justify-content-start mt-1\">\r\n        <div className=\"w-100 text-start d-flex flex-column\">\r\n        <h6 className=\"d-flex\"><span>General Instructions</span>\r\n        <span> :</span>\r\n        </h6>\r\n        <p className=\"program-detail-student-generalInstructions\">{programDetails?.studentFields?.generalInstructions}\r\n       </p>\r\n        </div>\r\n     \r\n      </div>\r\n      </div>\r\n\r\n         </Collapsible>\r\n  </div>\r\n</div>\r\n\r\n         </div>\r\n</div>\r\n    </div>\r\n  <div className=\"tab-pane fade\" id=\"profile\" role=\"tabpanel\" aria-labelledby=\"profile-tab\">...</div>\r\n  <div className=\"tab-pane fade\" id=\"contact\" role=\"tabpanel\" aria-labelledby=\"contact-tab\">...</div>\r\n</div>\r\n</div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProgramDetail;","F:\\catalysed-intern\\catalysed-intern-typescript-2\\src\\components\\EditProgram\\EditProgram.tsx",["119","120","121"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport './EditProgram.css'\r\nimport Collapsible from 'react-collapsible';\r\nimport Header from '../Header/Header';\r\nimport DatePicker from 'react-date-picker';\r\nimport { useParams } from 'react-router';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../../App';\r\nimport moment from 'moment';\r\n\r\n\r\nconst EditProgram = () => {\r\n\r\n  const{givenDate}=useContext(UserContext)\r\n  \r\n  const{userId}=useParams<any>()\r\n  const[given,setGiven]=useState<any>()\r\n  \r\n  \r\n  useEffect(()=>{\r\n\r\n    axios.get<any>(`https://catalysed-iteration1.el.r.appspot.com/program/${userId}`)\r\n    .then((res)=>{\r\n  console.log(res.data.id);\r\n    setGiven(res.data);\r\n  \r\n  \r\n    })\r\n  },[])\r\n\r\nconst[dating,setDating]=useState<any>('')\r\n  const dateSplit=given?.tentativeStartDate.split('/');\r\n\r\n  const dateJoin=[dateSplit?.[2],dateSplit?.[1],dateSplit?.[0]].join('-');\r\n  console.log(dateJoin,typeof(dateJoin))\r\n  useEffect(()=>{\r\n    setDating(dateJoin)\r\n  },[])\r\n  console.log(dating)\r\n  const dateObj = new Date(dateJoin);\r\n  \r\n  console.log(dateObj);\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n  \r\n \r\n\r\n    return (\r\n        <>\r\n           <Header />\r\n       \r\n       <h1 className=\"text-center\"><u>Edit Program</u></h1>\r\n      <form >\r\n     <div className=\"row \">\r\n        <div className=\"col-md-7 d-flex justify-content-center ms-2 me-2\">\r\n\r\n          <div className=\"text-center ml-2\">\r\n\r\n    <div className=\" d-flex justify-content-start\">\r\n        <div className=\"w-100 \">\r\n\r\n <p className=\" text-start m-0\"> <label >Title</label></p>\r\n<input type=\"text\" className=\"form-control w-100 \"  defaultValue={given?.title} id=\"formGroupExampleInput\" placeholder=\"Title\" name=\"title\" required/>\r\n        </div>\r\n\r\n\r\n   </div>\r\n\r\n    <div className=\"d-flex justify-content-start mt-3\">\r\n     <div className=\"w-100\">\r\n <p className=\" text-start m-0\"> <label >Description</label></p>\r\n <textarea className=\"form-control w-100\" rows={5} name=\"description\" defaultValue={given?.description}\r\n  placeholder=\"Description *\"  required/>\r\n    </div>\r\n\r\n    </div>\r\n    <div className=\"d-flex mt-3\">\r\n      \r\n    \r\n\r\n<div className=\"d-flex justify-content-start   \">\r\n<div className=\" tentative-date-container me-4\">\r\n\r\n<p className=\" text-start m-0 \"> <label >Tentative Start Date:</label></p>\r\n<div className=\"react-date-picker rounded  mt-1  \">\r\n\r\n <DatePicker clearIcon={null}  className=\"\" value={givenDate}  name=\"tentativeStartDate\" format=\"dd-MM-y\" dayPlaceholder=\"day\" monthPlaceholder=\"month\"\r\n yearPlaceholder=\"year\" required={true}/> \r\n\r\n</div>\r\n\r\n     </div>\r\n     <div className=\" w-25 duration-container \">\r\n       \r\n<p className=\" text-start mb-1\"> <label >Duration:</label></p>\r\n<div className=\"d-flex m-0\">\r\n<input type=\"number\" className=\" form-control  \" defaultValue={given?.durationInMonths} name=\"durationInMonths\" min=\"0\"\r\n required/>\r\n       <label className=\"mt-1 ml-1\">month</label>\r\n</div>\r\n      \r\n     </div>\r\n</div>\r\n\r\n     \r\n\r\n\r\n  \r\n    </div>\r\n    <div className=\"d-flex justify-content-start \">\r\n      <div className=\"d-flex justify-content-between\">\r\n      <div className=\"me-3\">\r\n      <p className=\" text-start m-0\"> <label >Virtual</label></p>\r\n    <input type=\"radio\" id=\"male\" className=\"form-check-input\" name=\"mode\" value=\"Virtual\" checked={true}\r\n      required/>\r\n      </div>\r\n      <div className=\"\">\r\n      <p className=\" text-start m-0 in-person \"> <label >In person</label></p>\r\n    <input type=\"radio\" id=\"male\" name=\"mode\" className=\"form-check-input\" value=\"In Person\"  required/>\r\n   </div>\r\n      </div>\r\n      \r\n  \r\n    \r\n\r\n    </div>\r\n    <div className=\" d-flex justify-content-start mt-2\">\r\n        <div className=\" \">\r\n\r\n <p className=\" text-start m-0\"> <label >Language requirements</label>\r\n <i className=\"fas fa-info-circle ms-2\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Language requirements\"></i>\r\n</p>\r\n<input type=\"text\" className=\"form-control\"defaultValue={given?.languageRequirements} id=\"formGroupExampleInput\" name=\"languageRequirements\"\r\n  placeholder=\"Language requirements\" required/>\r\n        </div>\r\n\r\n\r\n</div>\r\n<div className=\"mt-3 d-flex\">\r\n <div className=\"d-flex\">\r\n <p className=\"text-center  mt-4\"> <label >Age Limit </label></p>\r\n <span  className=\"ms-2 mt-4\">:</span>\r\n </div>\r\n\r\n <div className=\"d-flex ms-2 w-50  my-auto \">\r\n   <div className=\"mb-2\" >\r\n     <div className=\"\">\r\n     <p className=\" text-center m-0 me-2\">From</p>\r\n     </div>\r\n     <div className=\"\">\r\n     <input type=\"number\" name=\"from\"  defaultValue={given?.ageLimit?.from} className=\" age-limit-1  w-75  form-control\" id=\"formGroupExampleInput\" min=\"0\" placeholder=\"\"required/>\r\n     </div>\r\n \r\n   </div>\r\n<span className=\"me-3 mt-4\">-</span> \r\n <div className=\"\">\r\n   <div>\r\n   <p className=\"me-2 m-0\">To</p>\r\n   </div>\r\n   <div>\r\n   <input type=\"number\" name=\"to\"  defaultValue={given?.ageLimit?.to} className=\" age-limit-2 w-75 form-control \" id=\"formGroupExampleInput\" placeholder=\"\"  min=\"0\" required/>\r\n   </div>\r\n\r\n \r\n </div>\r\n  </div>\r\n </div>\r\n\r\n\r\n</div>\r\n</div>\r\n<div className=\"col-md-5 bg-light m-auto d-flex justify-content-center  card card-create-program  mt-1\">\r\n\r\n<div className=\"card-body d-flex justify-content-center align-items-center\">\r\n  <div>\r\n\r\n<div className=\" d-flex justify-content-center pt-2 \">\r\n <div className=\"w-100 \">\r\n\r\n <p className=\" text-start m-0\"> <label >Program Link</label></p>\r\n <input type=\"url\" className=\"form-control w-100\" name=\"programLink\" defaultValue={given?.programLink} id=\"formGroupExampleInput\" placeholder=\"Program link\"  required/>\r\n </div>\r\n</div>\r\n\r\n\r\n<h5 className=\"mt-4\">Co-ordinator details</h5>\r\n\r\n<div className=\" d-flex justify-content-center\">\r\n <div className=\" w-100\">\r\n\r\n <p className=\" text-start m-0\"> <label >Name</label></p>\r\n <input type=\"text\" className=\"form-control w-100\" name=\"name\" defaultValue={given?.coordinator?.name} id=\"formGroupExampleInput\" placeholder=\"Name\" required/>\r\n </div>\r\n</div>\r\n\r\n<div className=\" d-flex mt-2 justify-content-center\">\r\n <div className=\"w-100 \">\r\n\r\n <p className=\" text-start m-0\"> <label >Email</label></p>\r\n <input type=\"email\" className=\"form-control  w-100\"  defaultValue={given?.coordinator?.email}  name=\"email\"id=\"formGroupExampleInput\" placeholder=\"Email\" required/>\r\n </div>\r\n</div>\r\n<div className=\" d-flex justify-content-center mt-2 pb-3\">\r\n <div className=\"phone-container \">\r\n\r\n <p className=\" text-start m-0\"> <label htmlFor=\"phone\">Phone</label></p>\r\n <div className=\"d-flex \">\r\n <input type=\"text\" className=\" phone-1st w-25 form-control \" \r\n  name=\"phoneExtension\"id=\"phone\" defaultValue={given?.coordinator?.phoneExtension}  placeholder=\"\" required/><span className=\"mt-1\">-</span>\r\n <input type=\"text\" className=\"form-control w-75\" id=\"phone\" defaultValue={given?.coordinator?.phoneNumber} name=\"phoneNumber\" placeholder=\"\"  required/>\r\n </div>\r\n\r\n </div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n</div>\r\n\r\n     </div>\r\n     \r\n\r\n <div className=\"ms-5 \">\r\n         \r\n          <Collapsible className=\"container w-auto  collapsible-student-field bg-light mt-2 pb-2 w-100 h-auto collapsible\" open={true}overflowWhenOpen=\"visible\" openedClassName=\"container  collapsible-student-field   collapsible bg-light pb-2  mt-2 \" triggerTagName=\"div\"triggerWhenOpen={<p className=\"text-start mt-3\"> <b>^ </b>Mentor Fields &nbsp;<span className=\"bg-secondary text-white\"><i className=\"fas fa-info-circle\"></i>(This field is only visible for mentors)</span></p>} trigger={<p className=\"text-start mt-3 \"> <b className=\"sign-left\">&gt;</b> Mentor Fields &nbsp;<span className=\"bg-secondary text-white \"><i className=\"fas fa-info-circle\"></i>(This field is only visible for mentors)</span></p>} \r\n          >\r\n        {/* <div className=\" d-flex justify-content-center\">\r\n <div className=\" \">\r\n\r\n <p className=\" text-start m-0\"> <label >Skills/Subject requirements</label></p>\r\n <input type=\"text\" className=\"w-100 form-control\" id=\"formGroupExampleInput\" placeholder=\"Skills\" required/>\r\n </div>\r\n</div>\r\n<div className=\"d-flex justify-content-center\">\r\n<div className=\" w-25\">\r\n          \r\n          <p className=\" text-center \"> <label >Number of openings:</label></p>\r\n                   <input type=\"number\" className=\"w-25 form-control\"  min=\"0\"required/>\r\n                \r\n                 </div>    \r\n                 <div className=\"  \">\r\n\r\n <p className=\" text-start m-0\"> <label >Application End Date:</label></p>\r\n <DatePicker clearIcon={null} value={mentorDate} className=\"\" onChange={setMentorDate} format=\"dd-MM-y\"dayPlaceholder=\"day\" monthPlaceholder=\"month\"  yearPlaceholder=\"year\" required={true}/>\r\n        </div> \r\n</div>\r\n          \r\n          \r\n        \r\n         <div className=\"d-flex justify-content-start\">\r\n           <div className=\"w-100 text-start\">\r\n           <p className=\"\">Instructions </p>\r\n          <textarea name=\"\" className=\"w-75 form-control\" id=\"\" cols={3} rows={3}  placeholder=\"Instructions*\"/>\r\n           </div>\r\n        \r\n         </div> */}\r\n<div className=\"bg-white p-2\">\r\n<div className=\" d-flex justify-content-start\">\r\n <div className=\" \">\r\n\r\n <p className=\" text-start m-0\"> <label >Skills/Subject requirements</label></p>\r\n <input type=\"text\" name=\"subjectRequirementsMentor\" defaultValue={given?.mentorFields?.subjectRequirements} className=\"w-100 form-control\" id=\"formGroupExampleInput\" placeholder=\"Skills\" required/>\r\n </div>\r\n</div>\r\n<div className=\"d-flex justify-content-start mt-3\">\r\n<div className=\" w-25  \">\r\n          \r\n          <p className=\" text-start m-0\"> <label >Number of openings:</label></p>\r\n                   <input type=\"number\" name=\"openingsMentor\" defaultValue={given?.mentorFields?.openings}   className=\"w-25 form-control\"  min=\"0\"required/>\r\n                \r\n                 </div>    \r\n                 <div className=\"  \">\r\n\r\n <p className=\" text-start m-0\"> <label >Application End Date:</label></p>\r\n <DatePicker clearIcon={null}  className=\"\"   name=\"applyByMentor\"  format=\"dd-MM-y\"dayPlaceholder=\"day\" monthPlaceholder=\"month\"  yearPlaceholder=\"year\" required={true}/>\r\n        </div> \r\n</div>\r\n          \r\n          \r\n        \r\n         <div className=\"d-flex  justify-content-start\">\r\n           <div className=\"w-100 text-start\">\r\n           <p className=\"m-0\">Instructions </p>\r\n          <textarea name=\"generalInstructionsMentor\" defaultValue={given?.mentorFields?.generalInstructions} className=\"w-100 form-control\" id=\"\" cols={3} rows={3}  placeholder=\"Instructions*\" required/>\r\n           </div>\r\n        \r\n         </div>\r\n         </div>\r\n </Collapsible>\r\n\r\n </div>\r\n <div className=\"ms-5\">\r\n <Collapsible className=\"container collapsible-student-field bg-light mt-2  collapsible\" open={true}overflowWhenOpen=\"visible\" openedClassName=\"container  collapsible-student-field  collapsible bg-light  pb-2 mt-2 \" triggerTagName=\"div\"triggerWhenOpen={<p className=\"text-start mt-3\"> <b>^ </b>Student Fields &nbsp;<span className=\"bg-secondary text-white\"><i className=\"fas fa-info-circle\"></i>(This field is only visible for students)</span></p>} trigger={<p className=\"text-start mt-3 \"> <b className=\"sign-left\">&gt;</b> Student Fields &nbsp;<span className=\"bg-secondary text-white \"><i className=\"fas fa-info-circle\"></i>(This field is only visible for students)</span></p>} \r\n          >\r\n           <div className=\"bg-white p-2\">\r\n   <div className=\" d-flex justify-content-start \">\r\n     <div className=\" \">\r\n\r\n  <p className=\" text-start m-0\"> <label >Skills/Subject requirements</label></p>\r\n <input type=\"text\" className=\"w-100 form-control \" defaultValue={given?.studentFields?.subjectRequirements}\r\n  name=\"subjectRequirementsStudent\" id=\"formGroupExampleInput\" placeholder=\"Skills\" required/>\r\n </div>\r\n</div>\r\n<div className=\"d-flex justify-content-start mt-2\">\r\n<div className=\" w-25\">\r\n          \r\n          <p className=\" text-start m-0\"> <label >Number of openings:</label></p>\r\n                   <input type=\"number\" defaultValue={given?.studentFields?.openings} className=\"w-25 form-control\" name=\"openingsStudent\" min=\"0\" required/>\r\n                \r\n                 </div>    \r\n                 <div className=\"  \">\r\n\r\n <p className=\" text-start m-0\"> <label >Application End Date:</label></p>\r\n <DatePicker clearIcon={null}  format=\"dd-MM-y\"dayPlaceholder=\"day\" monthPlaceholder=\"month\"  yearPlaceholder=\"year\" name=\"applyByStudent\" required={true}/>\r\n        </div> \r\n</div>\r\n          <div className=\"d-flex\">\r\n          <div className=\"d-flex\">\r\n            <input type=\"checkbox\"  name=\"paid\" checked={given?.studentFields?.paid}   className=\"mt-1 form-check-input\" required/>\r\n            <p className=\"ms-1\">Is paid program?</p>\r\n          </div> &nbsp;&nbsp;\r\n         \r\n           \r\n               {\r\n              given?.studentFields?.paid ?\r\n                \r\n              <div className=\"w-25 \">\r\n              <p className=\"text-start m-0\">Program fees</p>\r\n              <div className=\"d-flex text-start\">\r\n             \r\n              <input type=\"number\" name=\"programFees\" defaultValue={given?.studentFields?.programFees}  className=\" form-control-md paid-program-input form-control\" min=\"0\" required/> &nbsp;\r\n                  <label>₹</label>\r\n              </div>\r\n               </div>\r\n\r\n\r\n              : \r\n              ''\r\n\r\n            }\r\n       \r\n           \r\n         \r\n          </div>\r\n          \r\n        \r\n         <div className=\"d-flex justify-content-start mt-3\">\r\n           <div className=\"w-100 text-start\">\r\n           <p className=\"m-0\">General Instructions </p>\r\n          <textarea  className=\"form-control \" id=\"\"  defaultValue={given?.studentFields?.generalInstructions}   name=\"generalInstructionsStudent\" cols={3} rows={3}  placeholder=\"General Instructions*\"required/>\r\n           </div>\r\n        \r\n         </div>\r\n         </div>\r\n\r\n            </Collapsible>\r\n</div>\r\n            {/* <div className=\"accordion container  mt-3 mb-3\" id=\"accordionExample\">\r\n<div className=\"accordion-item\">\r\n <h2 className=\"accordion-header d-flex justify-content-center \" id=\"headingOne\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n   <button className=\"accordion-button bg-light collapsed\"  data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" >\r\n     Mentor fields&nbsp;&nbsp;\r\n     <div className=\"bg-secondary text-white ml-5\"><i className=\"fas fa-info-circle\"></i>(This field is only visible for mentors)</div>\r\n   </button>\r\n\r\n </h2>\r\n <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n   <div className=\"accordion-body\">\r\n   <div className=\" d-flex justify-content-start\">\r\n <div className=\" \">\r\n\r\n <p className=\" text-start m-0\"> <label >Skills/Subject requirements</label></p>\r\n <input type=\"text\" className=\"w-100 form-control\" id=\"formGroupExampleInput\" placeholder=\"Skills\" required/>\r\n </div>\r\n</div>\r\n<div className=\"d-flex justify-content-start\">\r\n<div className=\" w-25  \">\r\n          \r\n          <p className=\" text-start m-0\"> <label >Number of openings:</label></p>\r\n                   <input type=\"number\" className=\"w-25 form-control\"  min=\"0\"required/>\r\n                \r\n                 </div>    \r\n                 <div className=\"  \">\r\n\r\n <p className=\" text-start m-0\"> <label >Application End Date:</label></p>\r\n <DatePicker clearIcon={null} value={mentorDate} className=\"\" onChange={setMentorDate} format=\"dd-MM-y\"dayPlaceholder=\"day\" monthPlaceholder=\"month\"  yearPlaceholder=\"year\" required={true}/>\r\n        </div> \r\n</div>\r\n          \r\n          \r\n        \r\n         <div className=\"d-flex justify-content-start\">\r\n           <div className=\"w-100 text-start\">\r\n           <p className=\"m-0\">Instructions </p>\r\n          <textarea name=\"\" className=\"w-100 form-control\" id=\"\" cols={3} rows={3}  placeholder=\"Instructions*\" required/>\r\n           </div>\r\n        \r\n         </div>\r\n   </div>\r\n </div>\r\n </div>\r\n </div> */}\r\n\r\n {/* <div className=\" accordion  container mb-3\" id=\"accordionExample2\">\r\n   <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header d-flex justify-content-center \" id=\"heading\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\r\n     <button className=\"accordion-button bg-light collapsed\"  data-bs-toggle=\"collapse\"  data-bs-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\r\n     Students fields &nbsp; \r\n       <div className=\"bg-secondary text-white ml-5\"><i className=\"fas fa-info-circle\"></i>(This field is only visible for students)</div>\r\n   </button>\r\n\r\n  </h2>\r\n <div id=\"collapseTwo\" className=\"accordion-collapse collapse show\"       aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample2\">\r\n   <div className=\"accordion-body\">\r\n \r\n    <div>\r\n   <div className=\" d-flex justify-content-start\">\r\n     <div className=\" \">\r\n\r\n  <p className=\" text-start m-0\"> <label >Skills/Subject requirements</label></p>\r\n <input type=\"text\" className=\"w-100 form-control \" id=\"formGroupExampleInput\" placeholder=\"Skills\" required/>\r\n </div>\r\n</div>\r\n<div className=\"d-flex justify-content-start\">\r\n<div className=\" w-25\">\r\n          \r\n          <p className=\" text-start m-0\"> <label >Number of openings:</label></p>\r\n                   <input type=\"number\" className=\"w-25 form-control\"  min=\"0\" required/>\r\n                \r\n                 </div>    \r\n                 <div className=\"  \">\r\n\r\n <p className=\" text-start m-0\"> <label >Application End Date:</label></p>\r\n <DatePicker clearIcon={null} value={studentDate} onChange={setStudentDate} format=\"dd-MM-y\"dayPlaceholder=\"day\" monthPlaceholder=\"month\"  yearPlaceholder=\"year\" required={true}/>\r\n        </div> \r\n</div>\r\n          <div className=\"d-flex\">\r\n          <div className=\"d-flex\">\r\n            <input type=\"checkbox\" checked={paidProgram} onChange={()=>setPaidProgram(!paidProgram)} className=\"mt-1 form-check-input\" required/>\r\n            <p>Is paid program?</p>\r\n          </div> &nbsp;&nbsp;\r\n         \r\n            {\r\n              paidProgram ? \r\n              <div className=\"w-25 \">\r\n              <p className=\"text-start m-0\">Program fees</p>\r\n              <div className=\"d-flex text-start\">\r\n             \r\n              <input type=\"number\" className=\" form-control-md paid-program-input form-control\" min=\"0\" required/> &nbsp;\r\n                  <label>₹</label>\r\n              </div>\r\n               </div>\r\n              : \r\n              ''\r\n\r\n            }\r\n       \r\n           \r\n         \r\n          </div>\r\n          \r\n        \r\n         <div className=\"d-flex justify-content-start\">\r\n           <div className=\"w-100 text-start\">\r\n           <p className=\"m-0\">General Instructions </p>\r\n          <textarea name=\"\" className=\"form-control mb-2\" id=\"\" cols={3} rows={3}  placeholder=\"General Instructions*\"required/>\r\n           </div>\r\n        \r\n         </div>\r\n         </div>\r\n          \r\n          \r\n        \r\n \r\n   </div>\r\n </div>\r\n </div>\r\n </div> */}\r\n \r\n\r\n\r\n </form>\r\n   \r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditProgram;",{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":12},{"ruleId":"126","severity":1,"message":"130","line":8,"column":3,"nodeType":"128","messageId":"129","endLine":8,"endColumn":7},{"ruleId":"126","severity":1,"message":"131","line":21,"column":10,"nodeType":"128","messageId":"129","endLine":21,"endColumn":14},{"ruleId":"126","severity":1,"message":"132","line":21,"column":16,"nodeType":"128","messageId":"129","endLine":21,"endColumn":30},{"ruleId":"126","severity":1,"message":"133","line":2,"column":17,"nodeType":"128","messageId":"129","endLine":2,"endColumn":26},{"ruleId":"126","severity":1,"message":"134","line":17,"column":36,"nodeType":"128","messageId":"129","endLine":17,"endColumn":66},{"ruleId":"135","severity":1,"message":"136","line":72,"column":108,"nodeType":"137","messageId":"138","endLine":72,"endColumn":110},{"ruleId":"126","severity":1,"message":"139","line":16,"column":34,"nodeType":"128","messageId":"129","endLine":16,"endColumn":62},{"ruleId":"135","severity":1,"message":"136","line":71,"column":98,"nodeType":"137","messageId":"138","endLine":71,"endColumn":100},{"ruleId":"126","severity":1,"message":"140","line":14,"column":33,"nodeType":"128","messageId":"129","endLine":14,"endColumn":60},{"ruleId":"135","severity":1,"message":"136","line":69,"column":96,"nodeType":"137","messageId":"138","endLine":69,"endColumn":98},{"ruleId":"126","severity":1,"message":"141","line":12,"column":37,"nodeType":"128","messageId":"129","endLine":12,"endColumn":64},{"ruleId":"126","severity":1,"message":"142","line":2,"column":18,"nodeType":"128","messageId":"129","endLine":2,"endColumn":24},{"ruleId":"126","severity":1,"message":"143","line":2,"column":85,"nodeType":"128","messageId":"129","endLine":2,"endColumn":93},{"ruleId":"144","severity":1,"message":"145","line":94,"column":7,"nodeType":"146","endLine":94,"endColumn":57},{"ruleId":"144","severity":1,"message":"145","line":28,"column":13,"nodeType":"146","endLine":28,"endColumn":61},{"ruleId":"144","severity":1,"message":"145","line":38,"column":11,"nodeType":"146","endLine":38,"endColumn":57},{"ruleId":"144","severity":1,"message":"145","line":62,"column":17,"nodeType":"146","endLine":62,"endColumn":60},{"ruleId":"144","severity":1,"message":"145","line":88,"column":21,"nodeType":"146","endLine":88,"endColumn":61},{"ruleId":"144","severity":1,"message":"145","line":95,"column":21,"nodeType":"146","endLine":95,"endColumn":67},{"ruleId":"144","severity":1,"message":"145","line":115,"column":21,"nodeType":"146","endLine":115,"endColumn":82},{"ruleId":"144","severity":1,"message":"145","line":21,"column":3,"nodeType":"146","endLine":21,"endColumn":37},{"ruleId":"147","severity":1,"message":"148","line":34,"column":11,"nodeType":"146","endLine":34,"endColumn":74},{"ruleId":"147","severity":1,"message":"148","line":37,"column":11,"nodeType":"146","endLine":37,"endColumn":158},{"ruleId":"147","severity":1,"message":"148","line":41,"column":17,"nodeType":"146","endLine":41,"endColumn":56},{"ruleId":"147","severity":1,"message":"148","line":42,"column":17,"nodeType":"146","endLine":42,"endColumn":55},{"ruleId":"147","severity":1,"message":"148","line":44,"column":17,"nodeType":"146","endLine":44,"endColumn":55},{"ruleId":"147","severity":1,"message":"148","line":51,"column":11,"nodeType":"146","endLine":51,"endColumn":158},{"ruleId":"126","severity":1,"message":"149","line":91,"column":9,"nodeType":"128","messageId":"129","endLine":91,"endColumn":11},{"ruleId":"126","severity":1,"message":"150","line":97,"column":9,"nodeType":"128","messageId":"129","endLine":97,"endColumn":15},{"ruleId":"126","severity":1,"message":"151","line":97,"column":16,"nodeType":"128","messageId":"129","endLine":97,"endColumn":25},{"ruleId":"126","severity":1,"message":"152","line":1,"column":21,"nodeType":"128","messageId":"129","endLine":1,"endColumn":31},{"ruleId":"126","severity":1,"message":"153","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":21},{"ruleId":"126","severity":1,"message":"149","line":12,"column":10,"nodeType":"128","messageId":"129","endLine":12,"endColumn":12},{"ruleId":"126","severity":1,"message":"154","line":9,"column":8,"nodeType":"128","messageId":"129","endLine":9,"endColumn":14},{"ruleId":"155","severity":1,"message":"156","line":29,"column":5,"nodeType":"157","endLine":29,"endColumn":7,"suggestions":"158"},{"ruleId":"155","severity":1,"message":"159","line":38,"column":5,"nodeType":"157","endLine":38,"endColumn":7,"suggestions":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Flip' is defined but never used.","'ToastContainer' is defined but never used.","'useEffect' is defined but never used.","'setErrorsOrganizerRegistration' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setErrorsStudentRegistration' is assigned a value but never used.","'setErrorsMentorRegistration' is assigned a value but never used.","'setErrorsOrganizationDetail' is assigned a value but never used.","'Button' is defined but never used.","'MenuList' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'id' is assigned a value but never used.","'render' is assigned a value but never used.","'setRender' is assigned a value but never used.","'useContext' is defined but never used.","'UserContext' is defined but never used.","'moment' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["163"],"React Hook useEffect has a missing dependency: 'dateJoin'. Either include it or remove the dependency array.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [userId]",{"range":"169","text":"170"},"Update the dependencies array to be: [dateJoin]",{"range":"171","text":"172"},[735,737],"[userId]",[1010,1012],"[dateJoin]"]